

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 18 23:17:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F27K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.31
    41                           ; Generated 13/10/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F27K42 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     _OSCCON1	set	14809
    76  0000                     _ANSELC	set	14944
    77  0000                     _ANSELB	set	14928
    78  0000                     _ANSELA	set	14912
    79  0000                     _PORTAbits	set	16330
    80  0000                     _TRISC	set	16324
    81  0000                     _LATC	set	16316
    82  0000                     _PORTC	set	16332
    83  0000                     _TRISB	set	16323
    84  0000                     _LATB	set	16315
    85  0000                     _PORTB	set	16331
    86  0000                     _TRISA	set	16322
    87  0000                     _LATA	set	16314
    88  0000                     _PORTA	set	16330
    89  0000                     _LATBbits	set	16315
    90                           
    91                           	psect	smallconst
    92  002000                     __psmallconst:
    93                           	callstack 0
    94  002000  00                 	db	0
    95  002001                     STR_1:
    96                           
    97                           ; BSR set to: 58
    98  002001  4D                 	db	77	;'M'
    99  002002  6F                 	db	111	;'o'
   100  002003  64                 	db	100	;'d'
   101  002004  69                 	db	105	;'i'
   102  002005  66                 	db	102	;'f'
   103  002006  69                 	db	105	;'i'
   104  002007  63                 	db	99	;'c'
   105  002008  61                 	db	97	;'a'
   106  002009  6E                 	db	110	;'n'
   107  00200A  64                 	db	100	;'d'
   108  00200B  6F                 	db	111	;'o'
   109  00200C  2E                 	db	46
   110  00200D  2E                 	db	46
   111  00200E  2E                 	db	46
   112  00200F  00                 	db	0
   113  002010                     STR_4:
   114                           
   115                           ; BSR set to: 58
   116  002010  41                 	db	65	;'A'
   117  002011  63                 	db	99	;'c'
   118  002012  74                 	db	116	;'t'
   119  002013  75                 	db	117	;'u'
   120  002014  61                 	db	97	;'a'
   121  002015  6C                 	db	108	;'l'
   122  002016  69                 	db	105	;'i'
   123  002017  7A                 	db	122	;'z'
   124  002018  61                 	db	97	;'a'
   125  002019  64                 	db	100	;'d'
   126  00201A  6F                 	db	111	;'o'
   127  00201B  20                 	db	32
   128  00201C  4F                 	db	79	;'O'
   129  00201D  4B                 	db	75	;'K'
   130  00201E  00                 	db	0
   131  00201F                     STR_5:
   132                           
   133                           ; BSR set to: 58
   134  00201F  20                 	db	32
   135  002020  20                 	db	32
   136  002021  43                 	db	67	;'C'
   137  002022  6F                 	db	111	;'o'
   138  002023  72                 	db	114	;'r'
   139  002024  72                 	db	114	;'r'
   140  002025  69                 	db	105	;'i'
   141  002026  65                 	db	101	;'e'
   142  002027  6E                 	db	110	;'n'
   143  002028  74                 	db	116	;'t'
   144  002029  65                 	db	101	;'e'
   145  00202A  3A                 	db	58	;':'
   146  00202B  00                 	db	0
   147  00202C                     STR_3:
   148                           
   149                           ; BSR set to: 58
   150  00202C  75                 	db	117	;'u'
   151  00202D  41                 	db	65	;'A'
   152  00202E  2E                 	db	46
   153  00202F  00                 	db	0
   154  002030                     STR_2:
   155                           
   156                           ; BSR set to: 58
   157  002030  25                 	db	37
   158  002031  64                 	db	100	;'d'
   159  002032  00                 	db	0
   160  002033  00                 	db	0	; dummy byte at the end
   161  0000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165  0031DC                     __pcinit:
   166                           	callstack 0
   167  0031DC                     start_initialization:
   168                           	callstack 0
   169  0031DC                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Clear objects allocated to BANK0 (42 bytes)
   173  0031DC  EE00  F060         	lfsr	0,__pbssBANK0
   174  0031E0  0E2A               	movlw	42
   175  0031E2                     clear_0:
   176  0031E2  6AEE               	clrf	postinc0,c
   177  0031E4  06E8               	decf	wreg,f,c
   178  0031E6  E1FD               	bnz	clear_0
   179  0031E8                     end_of_initialization:
   180                           	callstack 0
   181  0031E8                     __end_of__initialization:
   182                           	callstack 0
   183  0031E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   184  0031EA  6EF8               	movwf	tblptru,c
   185  0031EC  0100               	movlb	0
   186  0031EE  EF8C  F012         	goto	_main	;jump to C main() function
   187                           
   188                           	psect	bssBANK0
   189  000060                     __pbssBANK0:
   190                           	callstack 0
   191  000060                     _nout:
   192                           	callstack 0
   193  000060                     	ds	2
   194  000062                     _width:
   195                           	callstack 0
   196  000062                     	ds	2
   197  000064                     _prec:
   198                           	callstack 0
   199  000064                     	ds	2
   200  000066                     _flags:
   201                           	callstack 0
   202  000066                     	ds	2
   203  000068                     _current:
   204                           	callstack 0
   205  000068                     	ds	2
   206  00006A                     _dbuf:
   207                           	callstack 0
   208  00006A                     	ds	32
   209                           
   210                           	psect	cstackBANK0
   211  00008A                     __pcstackBANK0:
   212                           	callstack 0
   213  00008A                     	ds	2
   214  00008C                     sprintf@ap:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x2
   218  00008C                     	ds	2
   219  00008E                     sprintf@f:
   220                           	callstack 0
   221                           
   222                           ; 6 bytes @ 0x4
   223  00008E                     	ds	6
   224  000094                     ??_LCD_new:
   225  000094                     LCD_mAdato@buffer:
   226                           	callstack 0
   227                           
   228                           ; 4 bytes @ 0xA
   229  000094                     	ds	6
   230  00009A                     LCD_new@buffer:
   231                           	callstack 0
   232                           
   233                           ; 4 bytes @ 0x10
   234  00009A                     	ds	4
   235  00009E                     ??_main:
   236                           
   237                           ; 1 bytes @ 0x14
   238  00009E                     	ds	2
   239                           
   240                           	psect	cstackCOMRAM
   241  000001                     __pcstackCOMRAM:
   242                           	callstack 0
   243  000001                     ?_strlen:
   244                           	callstack 0
   245  000001                     ?___lmul:
   246                           	callstack 0
   247  000001                     ?___aodiv:
   248                           	callstack 0
   249  000001                     ?___aomod:
   250                           	callstack 0
   251  000001                     Lcd_Port@a:
   252                           	callstack 0
   253  000001                     fputc@c:
   254                           	callstack 0
   255  000001                     strlen@s:
   256                           	callstack 0
   257  000001                     ___lmul@multiplier:
   258                           	callstack 0
   259  000001                     ___aodiv@dividend:
   260                           	callstack 0
   261  000001                     ___aomod@dividend:
   262                           	callstack 0
   263                           
   264                           ; 8 bytes @ 0x0
   265  000001                     	ds	1
   266  000002                     ??_Lcd_Cmd:
   267  000002                     lcd_write_char@temp:
   268                           	callstack 0
   269                           
   270                           ; 1 bytes @ 0x1
   271  000002                     	ds	1
   272  000003                     Lcd_Cmd@a:
   273                           	callstack 0
   274  000003                     lcd_write_char@y:
   275                           	callstack 0
   276  000003                     fputc@fp:
   277                           	callstack 0
   278  000003                     strlen@a:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x2
   282  000003                     	ds	1
   283  000004                     ??_lcd_init:
   284  000004                     lcd_gotoxy@b:
   285                           	callstack 0
   286  000004                     lcd_write_char@a:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0x3
   290  000004                     	ds	1
   291  000005                     ??_fputc:
   292  000005                     lcd_gotoxy@a:
   293                           	callstack 0
   294  000005                     lcd_putc@a:
   295                           	callstack 0
   296  000005                     ___lmul@multiplicand:
   297                           	callstack 0
   298                           
   299                           ; 4 bytes @ 0x4
   300  000005                     	ds	1
   301  000006                     lcd_gotoxy@z:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x5
   305  000006                     	ds	1
   306  000007                     ??_lcd_putc:
   307  000007                     lcd_gotoxy@y:
   308                           	callstack 0
   309                           
   310                           ; 1 bytes @ 0x6
   311  000007                     	ds	1
   312  000008                     lcd_gotoxy@temp:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x7
   316  000008                     	ds	1
   317  000009                     lcd_putc@i:
   318                           	callstack 0
   319  000009                     ___lmul@product:
   320                           	callstack 0
   321  000009                     ___aodiv@divisor:
   322                           	callstack 0
   323  000009                     ___aomod@divisor:
   324                           	callstack 0
   325                           
   326                           ; 8 bytes @ 0x8
   327  000009                     	ds	1
   328  00000A                     fputs@s:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x9
   332  00000A                     	ds	2
   333  00000C                     fputs@fp:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0xB
   337  00000C                     	ds	1
   338  00000D                     ?___aldiv:
   339                           	callstack 0
   340  00000D                     ___aldiv@dividend:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0xC
   344  00000D                     	ds	1
   345  00000E                     fputs@c:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0xD
   349  00000E                     	ds	1
   350  00000F                     fputs@i:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xE
   354  00000F                     	ds	2
   355  000011                     ?_pad:
   356                           	callstack 0
   357  000011                     ___aodiv@counter:
   358                           	callstack 0
   359  000011                     ___aomod@counter:
   360                           	callstack 0
   361  000011                     pad@fp:
   362                           	callstack 0
   363  000011                     ___aldiv@divisor:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x10
   367  000011                     	ds	1
   368  000012                     ___aodiv@sign:
   369                           	callstack 0
   370  000012                     ___aomod@sign:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x11
   374  000012                     	ds	1
   375  000013                     ?_abs:
   376                           	callstack 0
   377  000013                     pad@buf:
   378                           	callstack 0
   379  000013                     abs@a:
   380                           	callstack 0
   381  000013                     ___aodiv@quotient:
   382                           	callstack 0
   383                           
   384                           ; 8 bytes @ 0x12
   385  000013                     	ds	2
   386  000015                     ??_abs:
   387  000015                     ___aldiv@counter:
   388                           	callstack 0
   389  000015                     pad@p:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x14
   393  000015                     	ds	1
   394  000016                     ___aldiv@sign:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x15
   398  000016                     	ds	1
   399  000017                     ??_pad:
   400  000017                     ___aldiv@quotient:
   401                           	callstack 0
   402                           
   403                           ; 4 bytes @ 0x16
   404  000017                     	ds	1
   405  000018                     pad@i:
   406                           	callstack 0
   407                           
   408                           ; 2 bytes @ 0x17
   409  000018                     	ds	2
   410  00001A                     pad@w:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x19
   414  00001A                     	ds	2
   415  00001C                     ?_dtoa:
   416                           	callstack 0
   417  00001C                     dtoa@fp:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x1B
   421  00001C                     	ds	2
   422  00001E                     dtoa@d:
   423                           	callstack 0
   424                           
   425                           ; 8 bytes @ 0x1D
   426  00001E                     	ds	8
   427  000026                     ??_dtoa:
   428                           
   429                           ; 1 bytes @ 0x25
   430  000026                     	ds	8
   431  00002E                     _dtoa$694:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x2D
   435  00002E                     	ds	2
   436  000030                     dtoa@p:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x2F
   440  000030                     	ds	2
   441  000032                     dtoa@w:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x31
   445  000032                     	ds	2
   446  000034                     dtoa@s:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x33
   450  000034                     	ds	2
   451  000036                     dtoa@n:
   452                           	callstack 0
   453                           
   454                           ; 8 bytes @ 0x35
   455  000036                     	ds	8
   456  00003E                     dtoa@i:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x3D
   460  00003E                     	ds	2
   461  000040                     ?_vfpfcnvrt:
   462                           	callstack 0
   463  000040                     vfpfcnvrt@fp:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x3F
   467  000040                     	ds	2
   468  000042                     vfpfcnvrt@fmt:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0x41
   472  000042                     	ds	2
   473  000044                     vfpfcnvrt@ap:
   474                           	callstack 0
   475                           
   476                           ; 2 bytes @ 0x43
   477  000044                     	ds	2
   478  000046                     ??_vfpfcnvrt:
   479                           
   480                           ; 1 bytes @ 0x45
   481  000046                     	ds	2
   482  000048                     vfpfcnvrt@ll:
   483                           	callstack 0
   484                           
   485                           ; 8 bytes @ 0x47
   486  000048                     	ds	8
   487  000050                     ?_vfprintf:
   488                           	callstack 0
   489  000050                     vfprintf@fp:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x4F
   493  000050                     	ds	2
   494  000052                     vfprintf@fmt:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x51
   498  000052                     	ds	2
   499  000054                     vfprintf@ap:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x53
   503  000054                     	ds	2
   504  000056                     vfprintf@cfmt:
   505                           	callstack 0
   506                           
   507                           ; 2 bytes @ 0x55
   508  000056                     	ds	2
   509  000058                     ?_sprintf:
   510                           	callstack 0
   511  000058                     sprintf@s:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x57
   515  000058                     	ds	2
   516  00005A                     sprintf@fmt:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x59
   520  00005A                     	ds	4
   521  00005E                     LCD_mAdato@uA:
   522                           	callstack 0
   523  00005E                     LCD_new@uA:
   524                           	callstack 0
   525                           
   526                           ; 2 bytes @ 0x5D
   527  00005E                     	ds	2
   528  000060                     
   529                           ; 1 bytes @ 0x5F
   530 ;;
   531 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   532 ;;
   533 ;; *************** function _main *****************
   534 ;; Defined at:
   535 ;;		line 133 in file "main.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   551 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   552 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   553 ;;Total ram usage:        2 bytes
   554 ;; Hardware stack levels required when called:    9
   555 ;; This function calls:
   556 ;;		_CONFIG_PIC
   557 ;;		_LCD_mAdato
   558 ;;		_LCD_new
   559 ;;		_lcd_init
   560 ;; This function is called by:
   561 ;;		Startup code after reset
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565                           	psect	text0
   566  002518                     __ptext0:
   567                           	callstack 0
   568  002518                     _main:
   569                           	callstack 22
   570  002518                     
   571                           ;main.c: 136:     CONFIG_PIC();
   572  002518  EC9D  F018         	call	_CONFIG_PIC	;wreg free
   573                           
   574                           ;main.c: 137:     lcd_init();
   575  00251C  ECE2  F016         	call	_lcd_init	;wreg free
   576  002520                     
   577                           ;main.c: 138:     _delay((unsigned long)((200)*(8000000/4000.0)));
   578  002520  0E03               	movlw	3
   579  002522  0100               	movlb	0	; () banked
   580  002524  6F9F               	movwf	(??_main+1)& (0+255),b
   581  002526  0E08               	movlw	8
   582  002528  6F9E               	movwf	??_main& (0+255),b
   583  00252A  0E77               	movlw	119
   584  00252C                     u1457:
   585  00252C  2EE8               	decfsz	wreg,f,c
   586  00252E  D7FE               	bra	u1457
   587  002530  2F9E               	decfsz	??_main& (0+255),f,b
   588  002532  D7FC               	bra	u1457
   589  002534  2F9F               	decfsz	(??_main+1)& (0+255),f,b
   590  002536  D7FA               	bra	u1457
   591  002538                     l1911:
   592                           
   593                           ;main.c: 139:     LCD_new(current);
   594  002538  C068  F05E         	movff	_current,LCD_new@uA
   595  00253C  C069  F05F         	movff	_current+1,LCD_new@uA+1
   596  002540  EC54  F015         	call	_LCD_new	;wreg free
   597  002544                     l1913:
   598                           
   599                           ;main.c: 142:         if(PORTAbits.RA5==0){
   600  002544  BACA               	btfsc	202,5,c	;volatile
   601  002546  EFA7  F012         	goto	u1341
   602  00254A  EFA9  F012         	goto	u1340
   603  00254E                     u1341:
   604  00254E  EFEB  F012         	goto	l1933
   605  002552                     u1340:
   606  002552                     
   607                           ;main.c: 143:             _delay((unsigned long)((20)*(8000000/4000.0)));
   608  002552  0E34               	movlw	52
   609  002554  0100               	movlb	0	; () banked
   610  002556  6F9E               	movwf	??_main& (0+255),b
   611  002558  0EF1               	movlw	241
   612  00255A                     u1467:
   613  00255A  2EE8               	decfsz	wreg,f,c
   614  00255C  D7FE               	bra	u1467
   615  00255E  2F9E               	decfsz	??_main& (0+255),f,b
   616  002560  D7FC               	bra	u1467
   617  002562  D000               	nop2	
   618  002564                     
   619                           ;main.c: 144:             if(PORTAbits.RA5==1)
   620  002564  AACA               	btfss	202,5,c	;volatile
   621  002566  EFB7  F012         	goto	u1351
   622  00256A  EFB9  F012         	goto	u1350
   623  00256E                     u1351:
   624  00256E  EFCE  F012         	goto	l1925
   625  002572                     u1350:
   626  002572  EF56  F013         	goto	l116
   627  002576                     l1921:
   628                           
   629                           ;main.c: 147:             current=current-10;
   630  002576  0EF6               	movlw	246
   631  002578  0100               	movlb	0	; () banked
   632  00257A  2568               	addwf	_current& (0+255),w,b
   633  00257C  6F68               	movwf	_current& (0+255),b
   634  00257E  0EFF               	movlw	255
   635  002580  2169               	addwfc	(_current+1)& (0+255),w,b
   636  002582  6F69               	movwf	(_current+1)& (0+255),b
   637  002584                     
   638                           ; BSR set to: 0
   639                           ;main.c: 148:             _delay((unsigned long)((200)*(8000000/4000.0)));
   640  002584  0E03               	movlw	3
   641  002586  0100               	movlb	0	; () banked
   642  002588  6F9F               	movwf	(??_main+1)& (0+255),b
   643  00258A  0E08               	movlw	8
   644  00258C  6F9E               	movwf	??_main& (0+255),b
   645  00258E  0E77               	movlw	119
   646  002590                     u1477:
   647  002590  2EE8               	decfsz	wreg,f,c
   648  002592  D7FE               	bra	u1477
   649  002594  2F9E               	decfsz	??_main& (0+255),f,b
   650  002596  D7FC               	bra	u1477
   651  002598  2F9F               	decfsz	(??_main+1)& (0+255),f,b
   652  00259A  D7FA               	bra	u1477
   653  00259C                     l1925:
   654                           
   655                           ;main.c: 146:             while(PORTAbits.RA5==0){
   656  00259C  AACA               	btfss	202,5,c	;volatile
   657  00259E  EFD3  F012         	goto	u1361
   658  0025A2  EFD5  F012         	goto	u1360
   659  0025A6                     u1361:
   660  0025A6  EFBB  F012         	goto	l1921
   661  0025AA                     u1360:
   662  0025AA                     
   663                           ;main.c: 150:             if(current>500){ current=500;}
   664  0025AA  0EF5               	movlw	245
   665  0025AC  0100               	movlb	0	; () banked
   666  0025AE  5D68               	subwf	_current& (0+255),w,b
   667  0025B0  0E01               	movlw	1
   668  0025B2  5969               	subwfb	(_current+1)& (0+255),w,b
   669  0025B4  A0D8               	btfss	status,0,c
   670  0025B6  EFDF  F012         	goto	u1371
   671  0025BA  EFE1  F012         	goto	u1370
   672  0025BE                     u1371:
   673  0025BE  EFE5  F012         	goto	l1931
   674  0025C2                     u1370:
   675  0025C2                     
   676                           ; BSR set to: 0
   677  0025C2  0E01               	movlw	1
   678  0025C4  6F69               	movwf	(_current+1)& (0+255),b
   679  0025C6  0EF4               	movlw	244
   680  0025C8  6F68               	movwf	_current& (0+255),b
   681  0025CA                     l1931:
   682                           
   683                           ; BSR set to: 0
   684                           ;main.c: 151:             LCD_mAdato(current);
   685  0025CA  C068  F05E         	movff	_current,LCD_mAdato@uA
   686  0025CE  C069  F05F         	movff	_current+1,LCD_mAdato@uA+1
   687  0025D2  ECB5  F017         	call	_LCD_mAdato	;wreg free
   688  0025D6                     l1933:
   689                           
   690                           ;main.c: 154:         if(PORTAbits.RA3==0){
   691  0025D6  B6CA               	btfsc	202,3,c	;volatile
   692  0025D8  EFF0  F012         	goto	u1381
   693  0025DC  EFF2  F012         	goto	u1380
   694  0025E0                     u1381:
   695  0025E0  EF34  F013         	goto	l1953
   696  0025E4                     u1380:
   697  0025E4                     
   698                           ;main.c: 155:             _delay((unsigned long)((20)*(8000000/4000.0)));
   699  0025E4  0E34               	movlw	52
   700  0025E6  0100               	movlb	0	; () banked
   701  0025E8  6F9E               	movwf	??_main& (0+255),b
   702  0025EA  0EF1               	movlw	241
   703  0025EC                     u1487:
   704  0025EC  2EE8               	decfsz	wreg,f,c
   705  0025EE  D7FE               	bra	u1487
   706  0025F0  2F9E               	decfsz	??_main& (0+255),f,b
   707  0025F2  D7FC               	bra	u1487
   708  0025F4  D000               	nop2	
   709  0025F6                     
   710                           ;main.c: 156:             if(PORTAbits.RA3==1)
   711  0025F6  A6CA               	btfss	202,3,c	;volatile
   712  0025F8  EF00  F013         	goto	u1391
   713  0025FC  EF02  F013         	goto	u1390
   714  002600                     u1391:
   715  002600  EF17  F013         	goto	l1945
   716  002604                     u1390:
   717  002604  EF56  F013         	goto	l116
   718  002608                     l1941:
   719                           
   720                           ;main.c: 159:             current=current+10;
   721  002608  0E0A               	movlw	10
   722  00260A  0100               	movlb	0	; () banked
   723  00260C  2568               	addwf	_current& (0+255),w,b
   724  00260E  6F68               	movwf	_current& (0+255),b
   725  002610  0E00               	movlw	0
   726  002612  2169               	addwfc	(_current+1)& (0+255),w,b
   727  002614  6F69               	movwf	(_current+1)& (0+255),b
   728  002616                     
   729                           ; BSR set to: 0
   730                           ;main.c: 160:             _delay((unsigned long)((200)*(8000000/4000.0)));
   731  002616  0E03               	movlw	3
   732  002618  0100               	movlb	0	; () banked
   733  00261A  6F9F               	movwf	(??_main+1)& (0+255),b
   734  00261C  0E08               	movlw	8
   735  00261E  6F9E               	movwf	??_main& (0+255),b
   736  002620  0E77               	movlw	119
   737  002622                     u1497:
   738  002622  2EE8               	decfsz	wreg,f,c
   739  002624  D7FE               	bra	u1497
   740  002626  2F9E               	decfsz	??_main& (0+255),f,b
   741  002628  D7FC               	bra	u1497
   742  00262A  2F9F               	decfsz	(??_main+1)& (0+255),f,b
   743  00262C  D7FA               	bra	u1497
   744  00262E                     l1945:
   745                           
   746                           ;main.c: 158:             while(PORTAbits.RA3==0){
   747  00262E  A6CA               	btfss	202,3,c	;volatile
   748  002630  EF1C  F013         	goto	u1401
   749  002634  EF1E  F013         	goto	u1400
   750  002638                     u1401:
   751  002638  EF04  F013         	goto	l1941
   752  00263C                     u1400:
   753  00263C                     
   754                           ;main.c: 162:             if(current>500){ current=0;}
   755  00263C  0EF5               	movlw	245
   756  00263E  0100               	movlb	0	; () banked
   757  002640  5D68               	subwf	_current& (0+255),w,b
   758  002642  0E01               	movlw	1
   759  002644  5969               	subwfb	(_current+1)& (0+255),w,b
   760  002646  A0D8               	btfss	status,0,c
   761  002648  EF28  F013         	goto	u1411
   762  00264C  EF2A  F013         	goto	u1410
   763  002650                     u1411:
   764  002650  EF2E  F013         	goto	l1951
   765  002654                     u1410:
   766  002654                     
   767                           ; BSR set to: 0
   768  002654  0E00               	movlw	0
   769  002656  6F69               	movwf	(_current+1)& (0+255),b
   770  002658  0E00               	movlw	0
   771  00265A  6F68               	movwf	_current& (0+255),b
   772  00265C                     l1951:
   773                           
   774                           ; BSR set to: 0
   775                           ;main.c: 163:             LCD_mAdato(current);
   776  00265C  C068  F05E         	movff	_current,LCD_mAdato@uA
   777  002660  C069  F05F         	movff	_current+1,LCD_mAdato@uA+1
   778  002664  ECB5  F017         	call	_LCD_mAdato	;wreg free
   779  002668                     l1953:
   780                           
   781                           ;main.c: 166:         if(PORTAbits.RA4==0){
   782  002668  B8CA               	btfsc	202,4,c	;volatile
   783  00266A  EF39  F013         	goto	u1421
   784  00266E  EF3B  F013         	goto	u1420
   785  002672                     u1421:
   786  002672  EFA2  F012         	goto	l1913
   787  002676                     u1420:
   788  002676                     
   789                           ;main.c: 167:             _delay((unsigned long)((20)*(8000000/4000.0)));
   790  002676  0E34               	movlw	52
   791  002678  0100               	movlb	0	; () banked
   792  00267A  6F9E               	movwf	??_main& (0+255),b
   793  00267C  0EF1               	movlw	241
   794  00267E                     u1507:
   795  00267E  2EE8               	decfsz	wreg,f,c
   796  002680  D7FE               	bra	u1507
   797  002682  2F9E               	decfsz	??_main& (0+255),f,b
   798  002684  D7FC               	bra	u1507
   799  002686  D000               	nop2	
   800  002688                     
   801                           ;main.c: 168:             if(PORTAbits.RA4==1)
   802  002688  A8CA               	btfss	202,4,c	;volatile
   803  00268A  EF49  F013         	goto	u1431
   804  00268E  EF4B  F013         	goto	u1430
   805  002692                     u1431:
   806  002692  EF4D  F013         	goto	l112
   807  002696                     u1430:
   808  002696  EF56  F013         	goto	l116
   809  00269A                     l112:
   810  00269A  A8CA               	btfss	202,4,c	;volatile
   811  00269C  EF52  F013         	goto	u1441
   812  0026A0  EF54  F013         	goto	u1440
   813  0026A4                     u1441:
   814  0026A4  EF4D  F013         	goto	l112
   815  0026A8                     u1440:
   816  0026A8  EF9C  F012         	goto	l1911
   817  0026AC                     l116:
   818  0026AC  EFFE  F0FF         	goto	start
   819  0026B0                     __end_of_main:
   820                           	callstack 0
   821                           
   822 ;; *************** function _lcd_init *****************
   823 ;; Defined at:
   824 ;;		line 77 in file "./LCD_PIC18F.h"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   840 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   842 ;;Total ram usage:        1 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    2
   845 ;; This function calls:
   846 ;;		_Lcd_Cmd
   847 ;;		_Lcd_Port
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text1
   854  002DC4                     __ptext1:
   855                           	callstack 0
   856  002DC4                     _lcd_init:
   857                           	callstack 28
   858  002DC4                     
   859                           ;./LCD_PIC18F.h: 79:   Lcd_Port(0x00);
   860  002DC4  0E00               	movlw	0
   861  002DC6  ECE7  F017         	call	_Lcd_Port
   862  002DCA                     
   863                           ;./LCD_PIC18F.h: 80:    _delay((unsigned long)((20)*(8000000/4000.0)));
   864  002DCA  0E34               	movlw	52
   865  002DCC  6E04               	movwf	??_lcd_init^0,c
   866  002DCE  0EF2               	movlw	242
   867  002DD0                     u1517:
   868  002DD0  2EE8               	decfsz	wreg,f,c
   869  002DD2  D7FE               	bra	u1517
   870  002DD4  2E04               	decfsz	??_lcd_init^0,f,c
   871  002DD6  D7FC               	bra	u1517
   872  002DD8                     
   873                           ;./LCD_PIC18F.h: 81:   Lcd_Cmd(0x03);
   874  002DD8  0E03               	movlw	3
   875  002DDA  ECD6  F018         	call	_Lcd_Cmd
   876  002DDE                     
   877                           ;./LCD_PIC18F.h: 82:    _delay((unsigned long)((5)*(8000000/4000.0)));
   878  002DDE  0E0D               	movlw	13
   879  002DE0  6E04               	movwf	??_lcd_init^0,c
   880  002DE2  0EFC               	movlw	252
   881  002DE4                     u1527:
   882  002DE4  2EE8               	decfsz	wreg,f,c
   883  002DE6  D7FE               	bra	u1527
   884  002DE8  2E04               	decfsz	??_lcd_init^0,f,c
   885  002DEA  D7FC               	bra	u1527
   886  002DEC                     
   887                           ;./LCD_PIC18F.h: 83:   Lcd_Cmd(0x03);
   888  002DEC  0E03               	movlw	3
   889  002DEE  ECD6  F018         	call	_Lcd_Cmd
   890  002DF2                     
   891                           ;./LCD_PIC18F.h: 84:    _delay((unsigned long)((11)*(8000000/4000.0)));
   892  002DF2  0E1D               	movlw	29
   893  002DF4  6E04               	movwf	??_lcd_init^0,c
   894  002DF6  0E91               	movlw	145
   895  002DF8                     u1537:
   896  002DF8  2EE8               	decfsz	wreg,f,c
   897  002DFA  D7FE               	bra	u1537
   898  002DFC  2E04               	decfsz	??_lcd_init^0,f,c
   899  002DFE  D7FC               	bra	u1537
   900  002E00  F000               	nop	
   901  002E02                     
   902                           ;./LCD_PIC18F.h: 85:   Lcd_Cmd(0x03);
   903  002E02  0E03               	movlw	3
   904  002E04  ECD6  F018         	call	_Lcd_Cmd
   905  002E08                     
   906                           ;./LCD_PIC18F.h: 87:   Lcd_Cmd(0x02);
   907  002E08  0E02               	movlw	2
   908  002E0A  ECD6  F018         	call	_Lcd_Cmd
   909  002E0E                     
   910                           ;./LCD_PIC18F.h: 88:   Lcd_Cmd(0x02);
   911  002E0E  0E02               	movlw	2
   912  002E10  ECD6  F018         	call	_Lcd_Cmd
   913  002E14                     
   914                           ;./LCD_PIC18F.h: 89:   Lcd_Cmd(0x08);
   915  002E14  0E08               	movlw	8
   916  002E16  ECD6  F018         	call	_Lcd_Cmd
   917  002E1A                     
   918                           ;./LCD_PIC18F.h: 90:   Lcd_Cmd(0x00);
   919  002E1A  0E00               	movlw	0
   920  002E1C  ECD6  F018         	call	_Lcd_Cmd
   921  002E20                     
   922                           ;./LCD_PIC18F.h: 91:   Lcd_Cmd(0x0C);
   923  002E20  0E0C               	movlw	12
   924  002E22  ECD6  F018         	call	_Lcd_Cmd
   925  002E26                     
   926                           ;./LCD_PIC18F.h: 92:   Lcd_Cmd(0x00);
   927  002E26  0E00               	movlw	0
   928  002E28  ECD6  F018         	call	_Lcd_Cmd
   929  002E2C                     
   930                           ;./LCD_PIC18F.h: 93:   Lcd_Cmd(0x06);
   931  002E2C  0E06               	movlw	6
   932  002E2E  ECD6  F018         	call	_Lcd_Cmd
   933  002E32  0012               	return		;funcret
   934  002E34                     __end_of_lcd_init:
   935                           	callstack 0
   936                           
   937 ;; *************** function _LCD_new *****************
   938 ;; Defined at:
   939 ;;		line 107 in file "main.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  uA              2   93[COMRAM] unsigned int 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  buffer          4   16[BANK0 ] unsigned char [4]
   944 ;;  DAC             4    0        unsigned long 
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
   954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   955 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   956 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   957 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   958 ;;Total ram usage:       12 bytes
   959 ;; Hardware stack levels used:    1
   960 ;; Hardware stack levels required when called:    8
   961 ;; This function calls:
   962 ;;		___aldiv
   963 ;;		___lmul
   964 ;;		_lcd_clear
   965 ;;		_lcd_gotoxy
   966 ;;		_lcd_putc
   967 ;;		_sprintf
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text2
   974  002AA8                     __ptext2:
   975                           	callstack 0
   976  002AA8                     _LCD_new:
   977                           	callstack 22
   978  002AA8  C05E  F001         	movff	LCD_new@uA,___lmul@multiplier
   979  002AAC  C05F  F002         	movff	LCD_new@uA+1,___lmul@multiplier+1
   980  002AB0  6A03               	clrf	(___lmul@multiplier+2)^0,c
   981  002AB2  6A04               	clrf	(___lmul@multiplier+3)^0,c
   982  002AB4  0E00               	movlw	0
   983  002AB6  6E05               	movwf	___lmul@multiplicand^0,c
   984  002AB8  0E00               	movlw	0
   985  002ABA  6E06               	movwf	(___lmul@multiplicand+1)^0,c
   986  002ABC  0E08               	movlw	8
   987  002ABE  6E07               	movwf	(___lmul@multiplicand+2)^0,c
   988  002AC0  0E20               	movlw	32
   989  002AC2  6E08               	movwf	(___lmul@multiplicand+3)^0,c
   990  002AC4  EC1A  F017         	call	___lmul	;wreg free
   991  002AC8  C001  F00D         	movff	?___lmul,___aldiv@dividend
   992  002ACC  C002  F00E         	movff	?___lmul+1,___aldiv@dividend+1
   993  002AD0  C003  F00F         	movff	?___lmul+2,___aldiv@dividend+2
   994  002AD4  C004  F010         	movff	?___lmul+3,___aldiv@dividend+3
   995  002AD8  0E40               	movlw	64
   996  002ADA  6E11               	movwf	___aldiv@divisor^0,c
   997  002ADC  0E4B               	movlw	75
   998  002ADE  6E12               	movwf	(___aldiv@divisor+1)^0,c
   999  002AE0  0E4C               	movlw	76
  1000  002AE2  6E13               	movwf	(___aldiv@divisor+2)^0,c
  1001  002AE4  0E00               	movlw	0
  1002  002AE6  6E14               	movwf	(___aldiv@divisor+3)^0,c
  1003  002AE8  ECCE  F014         	call	___aldiv	;wreg free
  1004  002AEC                     
  1005                           ;main.c: 118:     lcd_clear();
  1006  002AEC  ECF9  F018         	call	_lcd_clear	;wreg free
  1007  002AF0                     
  1008                           ;main.c: 119:     lcd_gotoxy(1,2);
  1009  002AF0  0E02               	movlw	2
  1010  002AF2  6E04               	movwf	lcd_gotoxy@b^0,c
  1011  002AF4  0E01               	movlw	1
  1012  002AF6  EC82  F017         	call	_lcd_gotoxy
  1013  002AFA                     
  1014                           ;main.c: 120:     lcd_putc("Actualizado OK");
  1015  002AFA  0E10               	movlw	low STR_4
  1016  002AFC  6E05               	movwf	lcd_putc@a^0,c
  1017  002AFE  0E20               	movlw	high STR_4
  1018  002B00  6E06               	movwf	(lcd_putc@a+1)^0,c
  1019  002B02  EC91  F016         	call	_lcd_putc	;wreg free
  1020  002B06                     
  1021                           ;main.c: 121:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1022  002B06  0E0B               	movlw	11
  1023  002B08  0100               	movlb	0	; () banked
  1024  002B0A  6F95               	movwf	(??_LCD_new+1)& (0+255),b
  1025  002B0C  0E26               	movlw	38
  1026  002B0E  6F94               	movwf	??_LCD_new& (0+255),b
  1027  002B10  0E5D               	movlw	93
  1028  002B12                     u1547:
  1029  002B12  2EE8               	decfsz	wreg,f,c
  1030  002B14  D7FE               	bra	u1547
  1031  002B16  2F94               	decfsz	??_LCD_new& (0+255),f,b
  1032  002B18  D7FC               	bra	u1547
  1033  002B1A  2F95               	decfsz	(??_LCD_new+1)& (0+255),f,b
  1034  002B1C  D7FA               	bra	u1547
  1035  002B1E  D000               	nop2	
  1036  002B20                     
  1037                           ;main.c: 122:     lcd_clear();
  1038  002B20  ECF9  F018         	call	_lcd_clear	;wreg free
  1039  002B24                     
  1040                           ;main.c: 123:     lcd_gotoxy(1,2);
  1041  002B24  0E02               	movlw	2
  1042  002B26  6E04               	movwf	lcd_gotoxy@b^0,c
  1043  002B28  0E01               	movlw	1
  1044  002B2A  EC82  F017         	call	_lcd_gotoxy
  1045  002B2E                     
  1046                           ;main.c: 124:     lcd_putc("  Corriente:");
  1047  002B2E  0E1F               	movlw	low STR_5
  1048  002B30  6E05               	movwf	lcd_putc@a^0,c
  1049  002B32  0E20               	movlw	high STR_5
  1050  002B34  6E06               	movwf	(lcd_putc@a+1)^0,c
  1051  002B36  EC91  F016         	call	_lcd_putc	;wreg free
  1052  002B3A                     
  1053                           ;main.c: 125:     lcd_gotoxy(2,6);
  1054  002B3A  0E06               	movlw	6
  1055  002B3C  6E04               	movwf	lcd_gotoxy@b^0,c
  1056  002B3E  0E02               	movlw	2
  1057  002B40  EC82  F017         	call	_lcd_gotoxy
  1058  002B44                     
  1059                           ;main.c: 126:     sprintf(buffer,"%d",uA);
  1060  002B44  0E9A               	movlw	low LCD_new@buffer
  1061  002B46  6E58               	movwf	sprintf@s^0,c
  1062  002B48  0E00               	movlw	high LCD_new@buffer
  1063  002B4A  6E59               	movwf	(sprintf@s+1)^0,c
  1064  002B4C  0E30               	movlw	low STR_2
  1065  002B4E  6E5A               	movwf	sprintf@fmt^0,c
  1066  002B50  0E20               	movlw	high STR_2
  1067  002B52  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1068  002B54  C05E  F05C         	movff	LCD_new@uA,?_sprintf+4
  1069  002B58  C05F  F05D         	movff	LCD_new@uA+1,?_sprintf+5
  1070  002B5C  EC15  F018         	call	_sprintf	;wreg free
  1071  002B60                     
  1072                           ;main.c: 127:     lcd_putc(buffer);
  1073  002B60  0E9A               	movlw	low LCD_new@buffer
  1074  002B62  6E05               	movwf	lcd_putc@a^0,c
  1075  002B64  0E00               	movlw	high LCD_new@buffer
  1076  002B66  6E06               	movwf	(lcd_putc@a+1)^0,c
  1077  002B68  EC91  F016         	call	_lcd_putc	;wreg free
  1078  002B6C                     
  1079                           ;main.c: 128:     lcd_gotoxy(2,10);
  1080  002B6C  0E0A               	movlw	10
  1081  002B6E  6E04               	movwf	lcd_gotoxy@b^0,c
  1082  002B70  0E02               	movlw	2
  1083  002B72  EC82  F017         	call	_lcd_gotoxy
  1084  002B76                     
  1085                           ;main.c: 129:     lcd_putc("uA.");
  1086  002B76  0E2C               	movlw	low STR_3
  1087  002B78  6E05               	movwf	lcd_putc@a^0,c
  1088  002B7A  0E20               	movlw	high STR_3
  1089  002B7C  6E06               	movwf	(lcd_putc@a+1)^0,c
  1090  002B7E  EC91  F016         	call	_lcd_putc	;wreg free
  1091  002B82  0012               	return		;funcret
  1092  002B84                     __end_of_LCD_new:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function ___lmul *****************
  1096 ;; Defined at:
  1097 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul32.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  multiplier      4    0[COMRAM] unsigned long 
  1100 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  product         4    8[COMRAM] unsigned long 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  4    0[COMRAM] unsigned long 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1112 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1113 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1115 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1116 ;;Total ram usage:       12 bytes
  1117 ;; Hardware stack levels used:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_LCD_new
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           
  1125                           	psect	text3
  1126  002E34                     __ptext3:
  1127                           	callstack 0
  1128  002E34                     ___lmul:
  1129                           	callstack 29
  1130  002E34  0E00               	movlw	0
  1131  002E36  6E09               	movwf	___lmul@product^0,c
  1132  002E38  0E00               	movlw	0
  1133  002E3A  6E0A               	movwf	(___lmul@product+1)^0,c
  1134  002E3C  0E00               	movlw	0
  1135  002E3E  6E0B               	movwf	(___lmul@product+2)^0,c
  1136  002E40  0E00               	movlw	0
  1137  002E42  6E0C               	movwf	(___lmul@product+3)^0,c
  1138  002E44                     l1777:
  1139  002E44  A001               	btfss	___lmul@multiplier^0,0,c
  1140  002E46  EF27  F017         	goto	u1261
  1141  002E4A  EF29  F017         	goto	u1260
  1142  002E4E                     u1261:
  1143  002E4E  EF31  F017         	goto	l1781
  1144  002E52                     u1260:
  1145  002E52  5005               	movf	___lmul@multiplicand^0,w,c
  1146  002E54  2609               	addwf	___lmul@product^0,f,c
  1147  002E56  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1148  002E58  220A               	addwfc	(___lmul@product+1)^0,f,c
  1149  002E5A  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1150  002E5C  220B               	addwfc	(___lmul@product+2)^0,f,c
  1151  002E5E  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1152  002E60  220C               	addwfc	(___lmul@product+3)^0,f,c
  1153  002E62                     l1781:
  1154  002E62  90D8               	bcf	status,0,c
  1155  002E64  3605               	rlcf	___lmul@multiplicand^0,f,c
  1156  002E66  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1157  002E68  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1158  002E6A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1159  002E6C  90D8               	bcf	status,0,c
  1160  002E6E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1161  002E70  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1162  002E72  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1163  002E74  3201               	rrcf	___lmul@multiplier^0,f,c
  1164  002E76  5001               	movf	___lmul@multiplier^0,w,c
  1165  002E78  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1166  002E7A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1167  002E7C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1168  002E7E  A4D8               	btfss	status,2,c
  1169  002E80  EF44  F017         	goto	u1271
  1170  002E84  EF46  F017         	goto	u1270
  1171  002E88                     u1271:
  1172  002E88  EF22  F017         	goto	l1777
  1173  002E8C                     u1270:
  1174  002E8C  C009  F001         	movff	___lmul@product,?___lmul
  1175  002E90  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1176  002E94  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1177  002E98  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1178  002E9C  0012               	return		;funcret
  1179  002E9E                     __end_of___lmul:
  1180                           	callstack 0
  1181                           
  1182 ;; *************** function ___aldiv *****************
  1183 ;; Defined at:
  1184 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aldiv.c"
  1185 ;; Parameters:    Size  Location     Type
  1186 ;;  dividend        4   12[COMRAM] long 
  1187 ;;  divisor         4   16[COMRAM] long 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  quotient        4   22[COMRAM] long 
  1190 ;;  sign            1   21[COMRAM] unsigned char 
  1191 ;;  counter         1   20[COMRAM] unsigned char 
  1192 ;; Return value:  Size  Location     Type
  1193 ;;                  4   12[COMRAM] long 
  1194 ;; Registers used:
  1195 ;;		wreg, status,2, status,0
  1196 ;; Tracked objects:
  1197 ;;		On entry : 0/0
  1198 ;;		On exit  : 0/0
  1199 ;;		Unchanged: 0/0
  1200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1201 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1202 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1204 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1205 ;;Total ram usage:       14 bytes
  1206 ;; Hardware stack levels used:    1
  1207 ;; This function calls:
  1208 ;;		Nothing
  1209 ;; This function is called by:
  1210 ;;		_LCD_new
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text4
  1215  00299C                     __ptext4:
  1216                           	callstack 0
  1217  00299C                     ___aldiv:
  1218                           	callstack 29
  1219  00299C  0E00               	movlw	0
  1220  00299E  6E16               	movwf	___aldiv@sign^0,c
  1221  0029A0  BE14               	btfsc	(___aldiv@divisor+3)^0,7,c
  1222  0029A2  EFD7  F014         	goto	u1280
  1223  0029A6  EFD5  F014         	goto	u1281
  1224  0029AA                     u1281:
  1225  0029AA  EFE1  F014         	goto	l1793
  1226  0029AE                     u1280:
  1227  0029AE  1E14               	comf	(___aldiv@divisor+3)^0,f,c
  1228  0029B0  1E13               	comf	(___aldiv@divisor+2)^0,f,c
  1229  0029B2  1E12               	comf	(___aldiv@divisor+1)^0,f,c
  1230  0029B4  6C11               	negf	___aldiv@divisor^0,c
  1231  0029B6  0E00               	movlw	0
  1232  0029B8  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
  1233  0029BA  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
  1234  0029BC  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
  1235  0029BE  0E01               	movlw	1
  1236  0029C0  6E16               	movwf	___aldiv@sign^0,c
  1237  0029C2                     l1793:
  1238  0029C2  BE10               	btfsc	(___aldiv@dividend+3)^0,7,c
  1239  0029C4  EFE8  F014         	goto	u1290
  1240  0029C8  EFE6  F014         	goto	u1291
  1241  0029CC                     u1291:
  1242  0029CC  EFF2  F014         	goto	l1799
  1243  0029D0                     u1290:
  1244  0029D0  1E10               	comf	(___aldiv@dividend+3)^0,f,c
  1245  0029D2  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
  1246  0029D4  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
  1247  0029D6  6C0D               	negf	___aldiv@dividend^0,c
  1248  0029D8  0E00               	movlw	0
  1249  0029DA  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
  1250  0029DC  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
  1251  0029DE  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
  1252  0029E0  0E01               	movlw	1
  1253  0029E2  1A16               	xorwf	___aldiv@sign^0,f,c
  1254  0029E4                     l1799:
  1255  0029E4  0E00               	movlw	0
  1256  0029E6  6E17               	movwf	___aldiv@quotient^0,c
  1257  0029E8  0E00               	movlw	0
  1258  0029EA  6E18               	movwf	(___aldiv@quotient+1)^0,c
  1259  0029EC  0E00               	movlw	0
  1260  0029EE  6E19               	movwf	(___aldiv@quotient+2)^0,c
  1261  0029F0  0E00               	movlw	0
  1262  0029F2  6E1A               	movwf	(___aldiv@quotient+3)^0,c
  1263  0029F4  5011               	movf	___aldiv@divisor^0,w,c
  1264  0029F6  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
  1265  0029F8  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
  1266  0029FA  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
  1267  0029FC  B4D8               	btfsc	status,2,c
  1268  0029FE  EF03  F015         	goto	u1301
  1269  002A02  EF05  F015         	goto	u1300
  1270  002A06                     u1301:
  1271  002A06  EF3B  F015         	goto	l1821
  1272  002A0A                     u1300:
  1273  002A0A  0E01               	movlw	1
  1274  002A0C  6E15               	movwf	___aldiv@counter^0,c
  1275  002A0E  EF0F  F015         	goto	l1807
  1276  002A12                     l1805:
  1277  002A12  90D8               	bcf	status,0,c
  1278  002A14  3611               	rlcf	___aldiv@divisor^0,f,c
  1279  002A16  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
  1280  002A18  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
  1281  002A1A  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
  1282  002A1C  2A15               	incf	___aldiv@counter^0,f,c
  1283  002A1E                     l1807:
  1284  002A1E  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
  1285  002A20  EF14  F015         	goto	u1311
  1286  002A24  EF16  F015         	goto	u1310
  1287  002A28                     u1311:
  1288  002A28  EF09  F015         	goto	l1805
  1289  002A2C                     u1310:
  1290  002A2C                     l1809:
  1291  002A2C  90D8               	bcf	status,0,c
  1292  002A2E  3617               	rlcf	___aldiv@quotient^0,f,c
  1293  002A30  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
  1294  002A32  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
  1295  002A34  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
  1296  002A36  5011               	movf	___aldiv@divisor^0,w,c
  1297  002A38  5C0D               	subwf	___aldiv@dividend^0,w,c
  1298  002A3A  5012               	movf	(___aldiv@divisor+1)^0,w,c
  1299  002A3C  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
  1300  002A3E  5013               	movf	(___aldiv@divisor+2)^0,w,c
  1301  002A40  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
  1302  002A42  5014               	movf	(___aldiv@divisor+3)^0,w,c
  1303  002A44  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
  1304  002A46  A0D8               	btfss	status,0,c
  1305  002A48  EF28  F015         	goto	u1321
  1306  002A4C  EF2A  F015         	goto	u1320
  1307  002A50                     u1321:
  1308  002A50  EF33  F015         	goto	l1817
  1309  002A54                     u1320:
  1310  002A54  5011               	movf	___aldiv@divisor^0,w,c
  1311  002A56  5E0D               	subwf	___aldiv@dividend^0,f,c
  1312  002A58  5012               	movf	(___aldiv@divisor+1)^0,w,c
  1313  002A5A  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
  1314  002A5C  5013               	movf	(___aldiv@divisor+2)^0,w,c
  1315  002A5E  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
  1316  002A60  5014               	movf	(___aldiv@divisor+3)^0,w,c
  1317  002A62  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
  1318  002A64  8017               	bsf	___aldiv@quotient^0,0,c
  1319  002A66                     l1817:
  1320  002A66  90D8               	bcf	status,0,c
  1321  002A68  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
  1322  002A6A  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
  1323  002A6C  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
  1324  002A6E  3211               	rrcf	___aldiv@divisor^0,f,c
  1325  002A70  2E15               	decfsz	___aldiv@counter^0,f,c
  1326  002A72  EF16  F015         	goto	l1809
  1327  002A76                     l1821:
  1328  002A76  5016               	movf	___aldiv@sign^0,w,c
  1329  002A78  B4D8               	btfsc	status,2,c
  1330  002A7A  EF41  F015         	goto	u1331
  1331  002A7E  EF43  F015         	goto	u1330
  1332  002A82                     u1331:
  1333  002A82  EF4B  F015         	goto	l1825
  1334  002A86                     u1330:
  1335  002A86  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
  1336  002A88  1E19               	comf	(___aldiv@quotient+2)^0,f,c
  1337  002A8A  1E18               	comf	(___aldiv@quotient+1)^0,f,c
  1338  002A8C  6C17               	negf	___aldiv@quotient^0,c
  1339  002A8E  0E00               	movlw	0
  1340  002A90  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
  1341  002A92  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
  1342  002A94  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
  1343  002A96                     l1825:
  1344  002A96  C017  F00D         	movff	___aldiv@quotient,?___aldiv
  1345  002A9A  C018  F00E         	movff	___aldiv@quotient+1,?___aldiv+1
  1346  002A9E  C019  F00F         	movff	___aldiv@quotient+2,?___aldiv+2
  1347  002AA2  C01A  F010         	movff	___aldiv@quotient+3,?___aldiv+3
  1348  002AA6  0012               	return		;funcret
  1349  002AA8                     __end_of___aldiv:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function _LCD_mAdato *****************
  1353 ;; Defined at:
  1354 ;;		line 96 in file "main.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  uA              2   93[COMRAM] unsigned int 
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  buffer          4   10[BANK0 ] unsigned char [4]
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  1    wreg      void 
  1361 ;; Registers used:
  1362 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1368 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1369 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1371 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1372 ;;Total ram usage:        6 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    8
  1375 ;; This function calls:
  1376 ;;		_lcd_clear
  1377 ;;		_lcd_gotoxy
  1378 ;;		_lcd_putc
  1379 ;;		_sprintf
  1380 ;; This function is called by:
  1381 ;;		_main
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text5
  1386  002F6A                     __ptext5:
  1387                           	callstack 0
  1388  002F6A                     _LCD_mAdato:
  1389                           	callstack 22
  1390  002F6A                     
  1391                           ;main.c: 97:     char buffer[4];;main.c: 98:     lcd_clear();
  1392  002F6A  ECF9  F018         	call	_lcd_clear	;wreg free
  1393  002F6E                     
  1394                           ;main.c: 99:     lcd_gotoxy(1,2);
  1395  002F6E  0E02               	movlw	2
  1396  002F70  6E04               	movwf	lcd_gotoxy@b^0,c
  1397  002F72  0E01               	movlw	1
  1398  002F74  EC82  F017         	call	_lcd_gotoxy
  1399  002F78                     
  1400                           ;main.c: 100:     lcd_putc("Modificando...");
  1401  002F78  0E01               	movlw	low STR_1
  1402  002F7A  6E05               	movwf	lcd_putc@a^0,c
  1403  002F7C  0E20               	movlw	high STR_1
  1404  002F7E  6E06               	movwf	(lcd_putc@a+1)^0,c
  1405  002F80  EC91  F016         	call	_lcd_putc	;wreg free
  1406  002F84                     
  1407                           ;main.c: 101:     lcd_gotoxy(2,6);
  1408  002F84  0E06               	movlw	6
  1409  002F86  6E04               	movwf	lcd_gotoxy@b^0,c
  1410  002F88  0E02               	movlw	2
  1411  002F8A  EC82  F017         	call	_lcd_gotoxy
  1412  002F8E                     
  1413                           ;main.c: 102:     sprintf(buffer,"%d",uA);
  1414  002F8E  0E94               	movlw	low LCD_mAdato@buffer
  1415  002F90  6E58               	movwf	sprintf@s^0,c
  1416  002F92  0E00               	movlw	high LCD_mAdato@buffer
  1417  002F94  6E59               	movwf	(sprintf@s+1)^0,c
  1418  002F96  0E30               	movlw	low STR_2
  1419  002F98  6E5A               	movwf	sprintf@fmt^0,c
  1420  002F9A  0E20               	movlw	high STR_2
  1421  002F9C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  1422  002F9E  C05E  F05C         	movff	LCD_mAdato@uA,?_sprintf+4
  1423  002FA2  C05F  F05D         	movff	LCD_mAdato@uA+1,?_sprintf+5
  1424  002FA6  EC15  F018         	call	_sprintf	;wreg free
  1425  002FAA                     
  1426                           ;main.c: 103:     lcd_putc(buffer);
  1427  002FAA  0E94               	movlw	low LCD_mAdato@buffer
  1428  002FAC  6E05               	movwf	lcd_putc@a^0,c
  1429  002FAE  0E00               	movlw	high LCD_mAdato@buffer
  1430  002FB0  6E06               	movwf	(lcd_putc@a+1)^0,c
  1431  002FB2  EC91  F016         	call	_lcd_putc	;wreg free
  1432  002FB6                     
  1433                           ;main.c: 104:     lcd_gotoxy(2,10);
  1434  002FB6  0E0A               	movlw	10
  1435  002FB8  6E04               	movwf	lcd_gotoxy@b^0,c
  1436  002FBA  0E02               	movlw	2
  1437  002FBC  EC82  F017         	call	_lcd_gotoxy
  1438  002FC0                     
  1439                           ;main.c: 105:     lcd_putc("uA.");
  1440  002FC0  0E2C               	movlw	low STR_3
  1441  002FC2  6E05               	movwf	lcd_putc@a^0,c
  1442  002FC4  0E20               	movlw	high STR_3
  1443  002FC6  6E06               	movwf	(lcd_putc@a+1)^0,c
  1444  002FC8  EC91  F016         	call	_lcd_putc	;wreg free
  1445  002FCC  0012               	return		;funcret
  1446  002FCE                     __end_of_LCD_mAdato:
  1447                           	callstack 0
  1448                           
  1449 ;; *************** function _sprintf *****************
  1450 ;; Defined at:
  1451 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_sprintf.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  s               2   87[COMRAM] PTR unsigned char 
  1454 ;;		 -> LCD_new@buffer(4), LCD_mAdato@buffer(4), 
  1455 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  1456 ;;		 -> STR_6(3), STR_2(3), 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  f               6    4[BANK0 ] struct _IO_FILE
  1459 ;;  ap              2    2[BANK0 ] PTR void [1]
  1460 ;;		 -> ?_sprintf(2), 
  1461 ;;  ret             2    0        int 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  2   87[COMRAM] int 
  1464 ;; Registers used:
  1465 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1471 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1472 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1474 ;;      Totals:         6      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1475 ;;Total ram usage:       16 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    7
  1478 ;; This function calls:
  1479 ;;		_vfprintf
  1480 ;; This function is called by:
  1481 ;;		_LCD_mAdato
  1482 ;;		_LCD_new
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text6
  1487  00302A                     __ptext6:
  1488                           	callstack 0
  1489  00302A                     _sprintf:
  1490                           	callstack 22
  1491  00302A  0E5C               	movlw	low (?_sprintf+4)
  1492  00302C  0100               	movlb	0	; () banked
  1493  00302E  6F8C               	movwf	sprintf@ap& (0+255),b
  1494  003030  0E00               	movlw	high (?_sprintf+4)
  1495  003032  6F8D               	movwf	(sprintf@ap+1)& (0+255),b
  1496  003034  C058  F08E         	movff	sprintf@s,sprintf@f
  1497  003038  C059  F08F         	movff	sprintf@s+1,sprintf@f+1
  1498  00303C                     
  1499                           ; BSR set to: 0
  1500  00303C  0E00               	movlw	0
  1501  00303E  6F91               	movwf	(sprintf@f+3)& (0+255),b
  1502  003040  0E00               	movlw	0
  1503  003042  6F90               	movwf	(sprintf@f+2)& (0+255),b
  1504  003044                     
  1505                           ; BSR set to: 0
  1506  003044  0E00               	movlw	0
  1507  003046  6F93               	movwf	(sprintf@f+5)& (0+255),b
  1508  003048  0E00               	movlw	0
  1509  00304A  6F92               	movwf	(sprintf@f+4)& (0+255),b
  1510  00304C                     
  1511                           ; BSR set to: 0
  1512  00304C  0E8E               	movlw	low sprintf@f
  1513  00304E  6E50               	movwf	vfprintf@fp^0,c
  1514  003050  0E00               	movlw	high sprintf@f
  1515  003052  6E51               	movwf	(vfprintf@fp+1)^0,c
  1516  003054  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  1517  003058  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1518  00305C  0E8C               	movlw	low sprintf@ap
  1519  00305E  6E54               	movwf	vfprintf@ap^0,c
  1520  003060  0E00               	movlw	high sprintf@ap
  1521  003062  6E55               	movwf	(vfprintf@ap+1)^0,c
  1522  003064  EC4F  F017         	call	_vfprintf	;wreg free
  1523  003068  0100               	movlb	0	; () banked
  1524  00306A  5190               	movf	(sprintf@f+2)& (0+255),w,b
  1525  00306C  2458               	addwf	sprintf@s^0,w,c
  1526  00306E  6ED9               	movwf	fsr2l,c
  1527  003070  5191               	movf	(sprintf@f+3)& (0+255),w,b
  1528  003072  2059               	addwfc	(sprintf@s+1)^0,w,c
  1529  003074  6EDA               	movwf	fsr2h,c
  1530  003076  0E00               	movlw	0
  1531  003078  6EDF               	movwf	indf2,c
  1532  00307A                     
  1533                           ; BSR set to: 0
  1534  00307A  0012               	return		;funcret
  1535  00307C                     __end_of_sprintf:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function _vfprintf *****************
  1539 ;; Defined at:
  1540 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1543 ;;		 -> sprintf@f(6), 
  1544 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  1545 ;;		 -> STR_6(3), STR_2(3), 
  1546 ;;  ap              2   83[COMRAM] PTR PTR void 
  1547 ;;		 -> sprintf@ap(2), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1550 ;;		 -> STR_6(3), STR_2(3), 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  2   79[COMRAM] int 
  1553 ;; Registers used:
  1554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1560 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1563 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1564 ;;Total ram usage:        8 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    6
  1567 ;; This function calls:
  1568 ;;		_vfpfcnvrt
  1569 ;; This function is called by:
  1570 ;;		_sprintf
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           	psect	text7
  1575  002E9E                     __ptext7:
  1576                           	callstack 0
  1577  002E9E                     _vfprintf:
  1578                           	callstack 22
  1579  002E9E                     
  1580                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1581  002E9E  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1582  002EA2  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1583  002EA6                     
  1584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1585  002EA6  0E00               	movlw	0
  1586  002EA8  0100               	movlb	0	; () banked
  1587  002EAA  6F61               	movwf	(_nout+1)& (0+255),b
  1588  002EAC  0E00               	movlw	0
  1589  002EAE  6F60               	movwf	_nout& (0+255),b
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1592  002EB0  EF6D  F017         	goto	l1733
  1593  002EB4                     l1731:
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1597  002EB4  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  1598  002EB8  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1599  002EBC  0E56               	movlw	low vfprintf@cfmt
  1600  002EBE  6E42               	movwf	vfpfcnvrt@fmt^0,c
  1601  002EC0  0E00               	movlw	high vfprintf@cfmt
  1602  002EC2  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1603  002EC4  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  1604  002EC8  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1605  002ECC  EC8C  F011         	call	_vfpfcnvrt	;wreg free
  1606  002ED0  5040               	movf	?_vfpfcnvrt^0,w,c
  1607  002ED2  0100               	movlb	0	; () banked
  1608  002ED4  2760               	addwf	_nout& (0+255),f,b
  1609  002ED6  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  1610  002ED8  2361               	addwfc	(_nout+1)& (0+255),f,b
  1611  002EDA                     l1733:
  1612                           
  1613                           ; BSR set to: 0
  1614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1615  002EDA  0060  F15B  FFF6   	movff	vfprintf@cfmt,tblptrl
  1616  002EE0  0060  F15F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  1617  002EE6                     	if	0	;tblptru may be non-zero
  1618  002EE6                     	endif
  1619  002EE6                     	if	0	;tblptru may be non-zero
  1620  002EE6                     	endif
  1621  002EE6  0008               	tblrd		*
  1622  002EE8  50F5               	movf	tablat,w,c
  1623  002EEA  0900               	iorlw	0
  1624  002EEC  A4D8               	btfss	status,2,c
  1625  002EEE  EF7B  F017         	goto	u1201
  1626  002EF2  EF7D  F017         	goto	u1200
  1627  002EF6                     u1201:
  1628  002EF6  EF5A  F017         	goto	l1731
  1629  002EFA                     u1200:
  1630  002EFA                     
  1631                           ; BSR set to: 0
  1632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1633  002EFA  C060  F050         	movff	_nout,?_vfprintf
  1634  002EFE  C061  F051         	movff	_nout+1,?_vfprintf+1
  1635  002F02                     
  1636                           ; BSR set to: 0
  1637  002F02  0012               	return		;funcret
  1638  002F04                     __end_of_vfprintf:
  1639                           	callstack 0
  1640                           
  1641 ;; *************** function _vfpfcnvrt *****************
  1642 ;; Defined at:
  1643 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  1646 ;;		 -> sprintf@f(6), 
  1647 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  1648 ;;		 -> vfprintf@cfmt(2), 
  1649 ;;  ap              2   67[COMRAM] PTR PTR void 
  1650 ;;		 -> sprintf@ap(2), 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  ll              8   71[COMRAM] long long 
  1653 ;;  llu             8    0        unsigned long long 
  1654 ;;  f               4    0        unsigned long long 
  1655 ;;  vp              3    0        PTR void 
  1656 ;;  ct              3    0        unsigned char [3]
  1657 ;;  cp              3    0        PTR unsigned char 
  1658 ;;  i               2    0        int 
  1659 ;;  done            2    0        int 
  1660 ;;  c               1    0        unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  2   63[COMRAM] int 
  1663 ;; Registers used:
  1664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1670 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1671 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1673 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1674 ;;Total ram usage:       16 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    5
  1677 ;; This function calls:
  1678 ;;		_dtoa
  1679 ;;		_fputc
  1680 ;; This function is called by:
  1681 ;;		_vfprintf
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text8
  1686  002318                     __ptext8:
  1687                           	callstack 0
  1688  002318                     _vfpfcnvrt:
  1689                           	callstack 22
  1690  002318                     
  1691                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.31\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.31\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          1\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1692  002318  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1693  00231E  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1694  002324  006F FF7B FFF6     	movff	postinc2,tblptrl
  1695  00232A  006F FF77 FFF7     	movff	postdec2,tblptrh
  1696  002330                     	if	0	;tblptru may be non-zero
  1697  002330                     	endif
  1698  002330                     	if	0	;tblptru may be non-zero
  1699  002330                     	endif
  1700  002330  0008               	tblrd		*
  1701  002332  50F5               	movf	tablat,w,c
  1702  002334  0A25               	xorlw	37
  1703  002336  A4D8               	btfss	status,2,c
  1704  002338  EFA0  F011         	goto	u1161
  1705  00233C  EFA2  F011         	goto	u1160
  1706  002340                     u1161:
  1707  002340  EF6A  F012         	goto	l1687
  1708  002344                     u1160:
  1709  002344                     
  1710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1711  002344  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1712  00234A  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1713  002350  2ADE               	incf	postinc2,f,c
  1714  002352  0E00               	movlw	0
  1715  002354  22DD               	addwfc	postdec2,f,c
  1716  002356                     
  1717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1718  002356  0E00               	movlw	0
  1719  002358  0100               	movlb	0	; () banked
  1720  00235A  6F63               	movwf	(_width+1)& (0+255),b
  1721  00235C  0E00               	movlw	0
  1722  00235E  6F62               	movwf	_width& (0+255),b
  1723  002360  C062  F066         	movff	_width,_flags
  1724  002364  C063  F067         	movff	_width+1,_flags+1
  1725  002368                     
  1726                           ; BSR set to: 0
  1727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1728  002368  6964               	setf	_prec& (0+255),b
  1729  00236A  6965               	setf	(_prec+1)& (0+255),b
  1730  00236C                     
  1731                           ; BSR set to: 0
  1732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1733  00236C  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1734  002372  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1735  002378  006F FF7B FFF6     	movff	postinc2,tblptrl
  1736  00237E  006F FF77 FFF7     	movff	postdec2,tblptrh
  1737  002384                     	if	0	;tblptru may be non-zero
  1738  002384                     	endif
  1739  002384                     	if	0	;tblptru may be non-zero
  1740  002384                     	endif
  1741  002384  0008               	tblrd		*
  1742  002386  50F5               	movf	tablat,w,c
  1743  002388  0A64               	xorlw	100
  1744  00238A  B4D8               	btfsc	status,2,c
  1745  00238C  EFCA  F011         	goto	u1171
  1746  002390  EFCC  F011         	goto	u1170
  1747  002394                     u1171:
  1748  002394  EFE2  F011         	goto	l1665
  1749  002398                     u1170:
  1750  002398                     
  1751                           ; BSR set to: 0
  1752  002398  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1753  00239E  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1754  0023A4  006F FF7B FFF6     	movff	postinc2,tblptrl
  1755  0023AA  006F FF77 FFF7     	movff	postdec2,tblptrh
  1756  0023B0                     	if	0	;tblptru may be non-zero
  1757  0023B0                     	endif
  1758  0023B0                     	if	0	;tblptru may be non-zero
  1759  0023B0                     	endif
  1760  0023B0  0008               	tblrd		*
  1761  0023B2  50F5               	movf	tablat,w,c
  1762  0023B4  0A69               	xorlw	105
  1763  0023B6  A4D8               	btfss	status,2,c
  1764  0023B8  EFE0  F011         	goto	u1181
  1765  0023BC  EFE2  F011         	goto	u1180
  1766  0023C0                     u1181:
  1767  0023C0  EF2C  F012         	goto	l1671
  1768  0023C4                     u1180:
  1769  0023C4                     l1665:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1773  0023C4  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1774  0023CA  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1775  0023D0  2ADE               	incf	postinc2,f,c
  1776  0023D2  0E00               	movlw	0
  1777  0023D4  22DD               	addwfc	postdec2,f,c
  1778                           
  1779                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1780  0023D6  0060  F113  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  1781  0023DC  0060  F117  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  1782  0023E2  006F FF7C  F046    	movff	indf2,??_vfpfcnvrt
  1783  0023E8  0E02               	movlw	2
  1784  0023EA  26DE               	addwf	postinc2,f,c
  1785  0023EC  006F FF7C  F047    	movff	indf2,??_vfpfcnvrt+1
  1786  0023F2  0E00               	movlw	0
  1787  0023F4  22DD               	addwfc	postdec2,f,c
  1788  0023F6  0060  F11B  FFD9   	movff	??_vfpfcnvrt,fsr2l
  1789  0023FC  0060  F11F  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  1790  002402  006F FF78  F048    	movff	postinc2,vfpfcnvrt@ll
  1791  002408  006F FF74  F049    	movff	postdec2,vfpfcnvrt@ll+1
  1792  00240E  0E00               	movlw	0
  1793  002410  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1794  002412  0EFF               	movlw	-1
  1795  002414  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  1796  002416  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  1797  002418  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  1798  00241A  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  1799  00241C  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  1800  00241E  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  1801  002420                     
  1802                           ; BSR set to: 0
  1803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1804  002420  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  1805  002424  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1806  002428  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  1807  00242C  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1808  002430  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1809  002434  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1810  002438  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1811  00243C  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1812  002440  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1813  002444  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1814  002448  EC1A  F010         	call	_dtoa	;wreg free
  1815  00244C  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  1816  002450  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1817  002454  EF8B  F012         	goto	l862
  1818  002458                     l1671:
  1819                           
  1820                           ; BSR set to: 0
  1821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1822  002458  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1823  00245E  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1824  002464  006F FF7B FFF6     	movff	postinc2,tblptrl
  1825  00246A  006F FF77 FFF7     	movff	postdec2,tblptrh
  1826  002470                     	if	0	;tblptru may be non-zero
  1827  002470                     	endif
  1828  002470                     	if	0	;tblptru may be non-zero
  1829  002470                     	endif
  1830  002470  0008               	tblrd		*
  1831  002472  50F5               	movf	tablat,w,c
  1832  002474  0A25               	xorlw	37
  1833  002476  A4D8               	btfss	status,2,c
  1834  002478  EF40  F012         	goto	u1191
  1835  00247C  EF42  F012         	goto	u1190
  1836  002480                     u1191:
  1837  002480  EF5B  F012         	goto	l1681
  1838  002484                     u1190:
  1839  002484                     
  1840                           ; BSR set to: 0
  1841                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1842  002484  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1843  00248A  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1844  002490  2ADE               	incf	postinc2,f,c
  1845  002492  0E00               	movlw	0
  1846  002494  22DD               	addwfc	postdec2,f,c
  1847  002496                     
  1848                           ; BSR set to: 0
  1849                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1850  002496  0E00               	movlw	0
  1851  002498  6E02               	movwf	(fputc@c+1)^0,c
  1852  00249A  0E25               	movlw	37
  1853  00249C  6E01               	movwf	fputc@c^0,c
  1854  00249E  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1855  0024A2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1856  0024A6  ECC2  F015         	call	_fputc	;wreg free
  1857  0024AA                     l1677:
  1858                           
  1859                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1860  0024AA  0E00               	movlw	0
  1861  0024AC  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1862  0024AE  0E01               	movlw	1
  1863  0024B0  6E40               	movwf	?_vfpfcnvrt^0,c
  1864  0024B2  EF8B  F012         	goto	l862
  1865  0024B6                     l1681:
  1866                           
  1867                           ; BSR set to: 0
  1868                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1869  0024B6  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1870  0024BC  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1871  0024C2  2ADE               	incf	postinc2,f,c
  1872  0024C4  0E00               	movlw	0
  1873  0024C6  22DD               	addwfc	postdec2,f,c
  1874  0024C8                     
  1875                           ; BSR set to: 0
  1876                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1877  0024C8  0E00               	movlw	0
  1878  0024CA  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  1879  0024CC  0E00               	movlw	0
  1880  0024CE  6E40               	movwf	?_vfpfcnvrt^0,c
  1881  0024D0  EF8B  F012         	goto	l862
  1882  0024D4                     l1687:
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1885  0024D4  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1886  0024DA  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1887  0024E0  006F FF7B FFF6     	movff	postinc2,tblptrl
  1888  0024E6  006F FF77 FFF7     	movff	postdec2,tblptrh
  1889  0024EC                     	if	0	;tblptru may be non-zero
  1890  0024EC                     	endif
  1891  0024EC                     	if	0	;tblptru may be non-zero
  1892  0024EC                     	endif
  1893  0024EC  0008               	tblrd		*
  1894  0024EE  50F5               	movf	tablat,w,c
  1895  0024F0  6E01               	movwf	fputc@c^0,c
  1896  0024F2  6A02               	clrf	(fputc@c+1)^0,c
  1897  0024F4  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1898  0024F8  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1899  0024FC  ECC2  F015         	call	_fputc	;wreg free
  1900  002500                     
  1901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1902  002500  0060  F10B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1903  002506  0060  F10F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1904  00250C  2ADE               	incf	postinc2,f,c
  1905  00250E  0E00               	movlw	0
  1906  002510  22DD               	addwfc	postdec2,f,c
  1907  002512  EF55  F012         	goto	l1677
  1908  002516                     l862:
  1909  002516  0012               	return		;funcret
  1910  002518                     __end_of_vfpfcnvrt:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _dtoa *****************
  1914 ;; Defined at:
  1915 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1918 ;;		 -> sprintf@f(6), 
  1919 ;;  d               8   29[COMRAM] long long 
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;  n               8   53[COMRAM] long long 
  1922 ;;  i               2   61[COMRAM] int 
  1923 ;;  s               2   51[COMRAM] int 
  1924 ;;  w               2   49[COMRAM] int 
  1925 ;;  p               2   47[COMRAM] int 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  2   27[COMRAM] int 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1935 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1936 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1937 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1938 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1939 ;;Total ram usage:       36 bytes
  1940 ;; Hardware stack levels used:    1
  1941 ;; Hardware stack levels required when called:    4
  1942 ;; This function calls:
  1943 ;;		___aodiv
  1944 ;;		___aomod
  1945 ;;		_abs
  1946 ;;		_pad
  1947 ;; This function is called by:
  1948 ;;		_vfpfcnvrt
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text9
  1953  002034                     __ptext9:
  1954                           	callstack 0
  1955  002034                     _dtoa:
  1956                           	callstack 22
  1957  002034                     
  1958                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1959  002034  C01E  F036         	movff	dtoa@d,dtoa@n
  1960  002038  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  1961  00203C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  1962  002040  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  1963  002044  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  1964  002048  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  1965  00204C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  1966  002050  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  1967  002054                     
  1968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1969  002054  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  1970  002056  EF2F  F010         	goto	u971
  1971  00205A  EF32  F010         	goto	u970
  1972  00205E                     u971:
  1973  00205E  0E01               	movlw	1
  1974  002060  EF33  F010         	goto	u980
  1975  002064                     u970:
  1976  002064  0E00               	movlw	0
  1977  002066                     u980:
  1978  002066  6E34               	movwf	dtoa@s^0,c
  1979  002068  6A35               	clrf	(dtoa@s+1)^0,c
  1980                           
  1981                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1982  00206A  5034               	movf	dtoa@s^0,w,c
  1983  00206C  1035               	iorwf	(dtoa@s+1)^0,w,c
  1984  00206E  B4D8               	btfsc	status,2,c
  1985  002070  EF3C  F010         	goto	u991
  1986  002074  EF3E  F010         	goto	u990
  1987  002078                     u991:
  1988  002078  EF4E  F010         	goto	l1581
  1989  00207C                     u990:
  1990  00207C                     
  1991                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1992  00207C  1E3D               	comf	(dtoa@n+7)^0,f,c
  1993  00207E  1E3C               	comf	(dtoa@n+6)^0,f,c
  1994  002080  1E3B               	comf	(dtoa@n+5)^0,f,c
  1995  002082  1E3A               	comf	(dtoa@n+4)^0,f,c
  1996  002084  1E39               	comf	(dtoa@n+3)^0,f,c
  1997  002086  1E38               	comf	(dtoa@n+2)^0,f,c
  1998  002088  1E37               	comf	(dtoa@n+1)^0,f,c
  1999  00208A  6C36               	negf	dtoa@n^0,c
  2000  00208C  0E00               	movlw	0
  2001  00208E  2237               	addwfc	(dtoa@n+1)^0,f,c
  2002  002090  2238               	addwfc	(dtoa@n+2)^0,f,c
  2003  002092  2239               	addwfc	(dtoa@n+3)^0,f,c
  2004  002094  223A               	addwfc	(dtoa@n+4)^0,f,c
  2005  002096  223B               	addwfc	(dtoa@n+5)^0,f,c
  2006  002098  223C               	addwfc	(dtoa@n+6)^0,f,c
  2007  00209A  223D               	addwfc	(dtoa@n+7)^0,f,c
  2008  00209C                     l1581:
  2009                           
  2010                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  2011  00209C  0100               	movlb	0	; () banked
  2012  00209E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2013  0020A0  EF54  F010         	goto	u1001
  2014  0020A4  EF56  F010         	goto	u1000
  2015  0020A8                     u1001:
  2016  0020A8  EF57  F010         	goto	l1585
  2017  0020AC                     u1000:
  2018  0020AC                     
  2019                           ; BSR set to: 0
  2020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  2021  0020AC  9366               	bcf	_flags& (0+255),1,b
  2022  0020AE                     l1585:
  2023                           
  2024                           ; BSR set to: 0
  2025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  2026  0020AE  BF65               	btfsc	(_prec+1)& (0+255),7,b
  2027  0020B0  EF64  F010         	goto	u1010
  2028  0020B4  5165               	movf	(_prec+1)& (0+255),w,b
  2029  0020B6  E106               	bnz	u1011
  2030  0020B8  0564               	decf	_prec& (0+255),w,b
  2031  0020BA  B0D8               	btfsc	status,0,c
  2032  0020BC  EF62  F010         	goto	u1011
  2033  0020C0  EF64  F010         	goto	u1010
  2034  0020C4                     u1011:
  2035  0020C4  EF6A  F010         	goto	l835
  2036  0020C8                     u1010:
  2037  0020C8                     
  2038                           ; BSR set to: 0
  2039  0020C8  0E00               	movlw	0
  2040  0020CA  6E31               	movwf	(dtoa@p+1)^0,c
  2041  0020CC  0E01               	movlw	1
  2042  0020CE  6E30               	movwf	dtoa@p^0,c
  2043  0020D0  EF6E  F010         	goto	l837
  2044  0020D4                     l835:
  2045                           
  2046                           ; BSR set to: 0
  2047  0020D4  C064  F030         	movff	_prec,dtoa@p
  2048  0020D8  C065  F031         	movff	_prec+1,dtoa@p+1
  2049  0020DC                     l837:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  2053  0020DC  C062  F032         	movff	_width,dtoa@w
  2054  0020E0  C063  F033         	movff	_width+1,dtoa@w+1
  2055  0020E4                     
  2056                           ; BSR set to: 0
  2057                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  2058  0020E4  5034               	movf	dtoa@s^0,w,c
  2059  0020E6  1035               	iorwf	(dtoa@s+1)^0,w,c
  2060  0020E8  A4D8               	btfss	status,2,c
  2061  0020EA  EF79  F010         	goto	u1021
  2062  0020EE  EF7B  F010         	goto	u1020
  2063  0020F2                     u1021:
  2064  0020F2  EF82  F010         	goto	l1593
  2065  0020F6                     u1020:
  2066  0020F6                     
  2067                           ; BSR set to: 0
  2068  0020F6  A566               	btfss	_flags& (0+255),2,b
  2069  0020F8  EF80  F010         	goto	u1031
  2070  0020FC  EF82  F010         	goto	u1030
  2071  002100                     u1031:
  2072  002100  EF85  F010         	goto	l1595
  2073  002104                     u1030:
  2074  002104                     l1593:
  2075                           
  2076                           ; BSR set to: 0
  2077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 306:         --w;
  2078  002104  0632               	decf	dtoa@w^0,f,c
  2079  002106  A0D8               	btfss	status,0,c
  2080  002108  0633               	decf	(dtoa@w+1)^0,f,c
  2081  00210A                     l1595:
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  2085  00210A  0E00               	movlw	0
  2086  00210C  6E3F               	movwf	(dtoa@i+1)^0,c
  2087  00210E  0E1F               	movlw	31
  2088  002110  6E3E               	movwf	dtoa@i^0,c
  2089  002112                     
  2090                           ; BSR set to: 0
  2091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  2092  002112  0E00               	movlw	0
  2093  002114  6F89               	movwf	(_dbuf+31)& (0+255),b
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2096  002116  EF09  F011         	goto	l1609
  2097  00211A                     l1599:
  2098                           
  2099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 313:         --i;
  2100  00211A  063E               	decf	dtoa@i^0,f,c
  2101  00211C  A0D8               	btfss	status,0,c
  2102  00211E  063F               	decf	(dtoa@i+1)^0,f,c
  2103  002120                     
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  2105  002120  0E6A               	movlw	low _dbuf
  2106  002122  243E               	addwf	dtoa@i^0,w,c
  2107  002124  6ED9               	movwf	fsr2l,c
  2108  002126  0E00               	movlw	high _dbuf
  2109  002128  203F               	addwfc	(dtoa@i+1)^0,w,c
  2110  00212A  6EDA               	movwf	fsr2h,c
  2111  00212C  C036  F001         	movff	dtoa@n,___aomod@dividend
  2112  002130  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  2113  002134  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  2114  002138  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  2115  00213C  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  2116  002140  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  2117  002144  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  2118  002148  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  2119  00214C  0E0A               	movlw	10
  2120  00214E  6E09               	movwf	___aomod@divisor^0,c
  2121  002150  0E00               	movlw	0
  2122  002152  6E0A               	movwf	(___aomod@divisor+1)^0,c
  2123  002154  0E00               	movlw	0
  2124  002156  6E0B               	movwf	(___aomod@divisor+2)^0,c
  2125  002158  0E00               	movlw	0
  2126  00215A  6E0C               	movwf	(___aomod@divisor+3)^0,c
  2127  00215C  0E00               	movlw	0
  2128  00215E  6E0D               	movwf	(___aomod@divisor+4)^0,c
  2129  002160  0E00               	movlw	0
  2130  002162  6E0E               	movwf	(___aomod@divisor+5)^0,c
  2131  002164  0E00               	movlw	0
  2132  002166  6E0F               	movwf	(___aomod@divisor+6)^0,c
  2133  002168  0E00               	movlw	0
  2134  00216A  6E10               	movwf	(___aomod@divisor+7)^0,c
  2135  00216C  EC1C  F014         	call	___aomod	;wreg free
  2136  002170  C001  F026         	movff	?___aomod,??_dtoa
  2137  002174  C002  F027         	movff	?___aomod+1,??_dtoa+1
  2138  002178  C003  F028         	movff	?___aomod+2,??_dtoa+2
  2139  00217C  C004  F029         	movff	?___aomod+3,??_dtoa+3
  2140  002180  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  2141  002184  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  2142  002188  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  2143  00218C  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  2144  002190  C026  F013         	movff	??_dtoa,abs@a
  2145  002194  C028  F014         	movff	??_dtoa+2,abs@a+1
  2146  002198  EC60  F018         	call	_abs	;wreg free
  2147  00219C  5013               	movf	?_abs^0,w,c
  2148  00219E  0F30               	addlw	48
  2149  0021A0  6EDF               	movwf	indf2,c
  2150  0021A2                     
  2151                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 315:         --p;
  2152  0021A2  0630               	decf	dtoa@p^0,f,c
  2153  0021A4  A0D8               	btfss	status,0,c
  2154  0021A6  0631               	decf	(dtoa@p+1)^0,f,c
  2155  0021A8                     
  2156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 316:         --w;
  2157  0021A8  0632               	decf	dtoa@w^0,f,c
  2158  0021AA  A0D8               	btfss	status,0,c
  2159  0021AC  0633               	decf	(dtoa@w+1)^0,f,c
  2160  0021AE                     
  2161                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  2162  0021AE  C036  F001         	movff	dtoa@n,___aodiv@dividend
  2163  0021B2  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  2164  0021B6  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  2165  0021BA  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  2166  0021BE  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  2167  0021C2  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  2168  0021C6  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  2169  0021CA  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  2170  0021CE  0E0A               	movlw	10
  2171  0021D0  6E09               	movwf	___aodiv@divisor^0,c
  2172  0021D2  0E00               	movlw	0
  2173  0021D4  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  2174  0021D6  0E00               	movlw	0
  2175  0021D8  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  2176  0021DA  0E00               	movlw	0
  2177  0021DC  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  2178  0021DE  0E00               	movlw	0
  2179  0021E0  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  2180  0021E2  0E00               	movlw	0
  2181  0021E4  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  2182  0021E6  0E00               	movlw	0
  2183  0021E8  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  2184  0021EA  0E00               	movlw	0
  2185  0021EC  6E10               	movwf	(___aodiv@divisor+7)^0,c
  2186  0021EE  EC58  F013         	call	___aodiv	;wreg free
  2187  0021F2  C001  F036         	movff	?___aodiv,dtoa@n
  2188  0021F6  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  2189  0021FA  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  2190  0021FE  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  2191  002202  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  2192  002206  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  2193  00220A  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  2194  00220E  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  2195  002212                     l1609:
  2196                           
  2197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  2198  002212  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  2199  002214  EF14  F011         	goto	u1041
  2200  002218  503F               	movf	(dtoa@i+1)^0,w,c
  2201  00221A  E108               	bnz	u1040
  2202  00221C  043E               	decf	dtoa@i^0,w,c
  2203  00221E  A0D8               	btfss	status,0,c
  2204  002220  EF14  F011         	goto	u1041
  2205  002224  EF16  F011         	goto	u1040
  2206  002228                     u1041:
  2207  002228  EF47  F011         	goto	l1619
  2208  00222C                     u1040:
  2209  00222C  5036               	movf	dtoa@n^0,w,c
  2210  00222E  1037               	iorwf	(dtoa@n+1)^0,w,c
  2211  002230  1038               	iorwf	(dtoa@n+2)^0,w,c
  2212  002232  1039               	iorwf	(dtoa@n+3)^0,w,c
  2213  002234  103A               	iorwf	(dtoa@n+4)^0,w,c
  2214  002236  103B               	iorwf	(dtoa@n+5)^0,w,c
  2215  002238  103C               	iorwf	(dtoa@n+6)^0,w,c
  2216  00223A  103D               	iorwf	(dtoa@n+7)^0,w,c
  2217  00223C  A4D8               	btfss	status,2,c
  2218  00223E  EF23  F011         	goto	u1051
  2219  002242  EF25  F011         	goto	u1050
  2220  002246                     u1051:
  2221  002246  EF8D  F010         	goto	l1599
  2222  00224A                     u1050:
  2223  00224A  BE31               	btfsc	(dtoa@p+1)^0,7,c
  2224  00224C  EF32  F011         	goto	u1060
  2225  002250  5031               	movf	(dtoa@p+1)^0,w,c
  2226  002252  E106               	bnz	u1061
  2227  002254  0430               	decf	dtoa@p^0,w,c
  2228  002256  B0D8               	btfsc	status,0,c
  2229  002258  EF30  F011         	goto	u1061
  2230  00225C  EF32  F011         	goto	u1060
  2231  002260                     u1061:
  2232  002260  EF8D  F010         	goto	l1599
  2233  002264                     u1060:
  2234  002264  BE33               	btfsc	(dtoa@w+1)^0,7,c
  2235  002266  EF3D  F011         	goto	u1071
  2236  00226A  5033               	movf	(dtoa@w+1)^0,w,c
  2237  00226C  E108               	bnz	u1070
  2238  00226E  0432               	decf	dtoa@w^0,w,c
  2239  002270  A0D8               	btfss	status,0,c
  2240  002272  EF3D  F011         	goto	u1071
  2241  002276  EF3F  F011         	goto	u1070
  2242  00227A                     u1071:
  2243  00227A  EF47  F011         	goto	l1619
  2244  00227E                     u1070:
  2245  00227E  0100               	movlb	0	; () banked
  2246  002280  B366               	btfsc	_flags& (0+255),1,b
  2247  002282  EF45  F011         	goto	u1081
  2248  002286  EF47  F011         	goto	u1080
  2249  00228A                     u1081:
  2250  00228A  EF8D  F010         	goto	l1599
  2251  00228E                     u1080:
  2252  00228E                     l1619:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  2255  00228E  5034               	movf	dtoa@s^0,w,c
  2256  002290  1035               	iorwf	(dtoa@s+1)^0,w,c
  2257  002292  A4D8               	btfss	status,2,c
  2258  002294  EF4E  F011         	goto	u1091
  2259  002298  EF50  F011         	goto	u1090
  2260  00229C                     u1091:
  2261  00229C  EF58  F011         	goto	l1623
  2262  0022A0                     u1090:
  2263  0022A0  0100               	movlb	0	; () banked
  2264  0022A2  A566               	btfss	_flags& (0+255),2,b
  2265  0022A4  EF56  F011         	goto	u1101
  2266  0022A8  EF58  F011         	goto	u1100
  2267  0022AC                     u1101:
  2268  0022AC  EF77  F011         	goto	l1633
  2269  0022B0                     u1100:
  2270  0022B0                     l1623:
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 322:         --i;
  2273  0022B0  063E               	decf	dtoa@i^0,f,c
  2274  0022B2  A0D8               	btfss	status,0,c
  2275  0022B4  063F               	decf	(dtoa@i+1)^0,f,c
  2276  0022B6                     
  2277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  2278  0022B6  5034               	movf	dtoa@s^0,w,c
  2279  0022B8  1035               	iorwf	(dtoa@s+1)^0,w,c
  2280  0022BA  A4D8               	btfss	status,2,c
  2281  0022BC  EF62  F011         	goto	u1111
  2282  0022C0  EF64  F011         	goto	u1110
  2283  0022C4                     u1111:
  2284  0022C4  EF6A  F011         	goto	l1629
  2285  0022C8                     u1110:
  2286  0022C8  0E00               	movlw	0
  2287  0022CA  6E2F               	movwf	(_dtoa$694+1)^0,c
  2288  0022CC  0E2B               	movlw	43
  2289  0022CE  6E2E               	movwf	_dtoa$694^0,c
  2290  0022D0  EF6E  F011         	goto	l1631
  2291  0022D4                     l1629:
  2292  0022D4  0E00               	movlw	0
  2293  0022D6  6E2F               	movwf	(_dtoa$694+1)^0,c
  2294  0022D8  0E2D               	movlw	45
  2295  0022DA  6E2E               	movwf	_dtoa$694^0,c
  2296  0022DC                     l1631:
  2297  0022DC  0E6A               	movlw	low _dbuf
  2298  0022DE  243E               	addwf	dtoa@i^0,w,c
  2299  0022E0  6ED9               	movwf	fsr2l,c
  2300  0022E2  0E00               	movlw	high _dbuf
  2301  0022E4  203F               	addwfc	(dtoa@i+1)^0,w,c
  2302  0022E6  6EDA               	movwf	fsr2h,c
  2303  0022E8  0060  F0BB  FFDF   	movff	_dtoa$694,indf2
  2304  0022EE                     l1633:
  2305                           
  2306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  2307  0022EE  C01C  F011         	movff	dtoa@fp,pad@fp
  2308  0022F2  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  2309  0022F6  0E6A               	movlw	low _dbuf
  2310  0022F8  243E               	addwf	dtoa@i^0,w,c
  2311  0022FA  6E13               	movwf	pad@buf^0,c
  2312  0022FC  0E00               	movlw	high _dbuf
  2313  0022FE  203F               	addwfc	(dtoa@i+1)^0,w,c
  2314  002300  6E14               	movwf	(pad@buf+1)^0,c
  2315  002302  C032  F015         	movff	dtoa@w,pad@p
  2316  002306  C033  F016         	movff	dtoa@w+1,pad@p+1
  2317  00230A  EC2E  F016         	call	_pad	;wreg free
  2318  00230E  C011  F01C         	movff	?_pad,?_dtoa
  2319  002312  C012  F01D         	movff	?_pad+1,?_dtoa+1
  2320  002316  0012               	return		;funcret
  2321  002318                     __end_of_dtoa:
  2322                           	callstack 0
  2323                           
  2324 ;; *************** function _pad *****************
  2325 ;; Defined at:
  2326 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  2329 ;;		 -> sprintf@f(6), 
  2330 ;;  buf             2   18[COMRAM] PTR unsigned char 
  2331 ;;		 -> dbuf(32), 
  2332 ;;  p               2   20[COMRAM] int 
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;  w               2   25[COMRAM] int 
  2335 ;;  i               2   23[COMRAM] int 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  2   16[COMRAM] int 
  2338 ;; Registers used:
  2339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2345 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2346 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2348 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2349 ;;Total ram usage:       11 bytes
  2350 ;; Hardware stack levels used:    1
  2351 ;; Hardware stack levels required when called:    3
  2352 ;; This function calls:
  2353 ;;		_fputc
  2354 ;;		_fputs
  2355 ;;		_strlen
  2356 ;; This function is called by:
  2357 ;;		_dtoa
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text10
  2362  002C5C                     __ptext10:
  2363                           	callstack 0
  2364  002C5C                     _pad:
  2365                           	callstack 22
  2366  002C5C                     
  2367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2368  002C5C  0100               	movlb	0	; () banked
  2369  002C5E  A166               	btfss	_flags& (0+255),0,b
  2370  002C60  EF34  F016         	goto	u921
  2371  002C64  EF36  F016         	goto	u920
  2372  002C68                     u921:
  2373  002C68  EF40  F016         	goto	l1553
  2374  002C6C                     u920:
  2375  002C6C                     
  2376                           ; BSR set to: 0
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2378  002C6C  C013  F00A         	movff	pad@buf,fputs@s
  2379  002C70  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2380  002C74  C011  F00C         	movff	pad@fp,fputs@fp
  2381  002C78  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2382  002C7C  EC3E  F018         	call	_fputs	;wreg free
  2383  002C80                     l1553:
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2386  002C80  BE16               	btfsc	(pad@p+1)^0,7,c
  2387  002C82  EF45  F016         	goto	u931
  2388  002C86  EF47  F016         	goto	u930
  2389  002C8A                     u931:
  2390  002C8A  EF4D  F016         	goto	l1557
  2391  002C8E                     u930:
  2392  002C8E  C015  F01A         	movff	pad@p,pad@w
  2393  002C92  C016  F01B         	movff	pad@p+1,pad@w+1
  2394  002C96  EF51  F016         	goto	l824
  2395  002C9A                     l1557:
  2396  002C9A  0E00               	movlw	0
  2397  002C9C  6E1B               	movwf	(pad@w+1)^0,c
  2398  002C9E  0E00               	movlw	0
  2399  002CA0  6E1A               	movwf	pad@w^0,c
  2400  002CA2                     l824:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2403  002CA2  0E00               	movlw	0
  2404  002CA4  6E19               	movwf	(pad@i+1)^0,c
  2405  002CA6  0E00               	movlw	0
  2406  002CA8  6E18               	movwf	pad@i^0,c
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2409  002CAA  EF63  F016         	goto	l1563
  2410  002CAE                     l1559:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2413  002CAE  0E00               	movlw	0
  2414  002CB0  6E02               	movwf	(fputc@c+1)^0,c
  2415  002CB2  0E20               	movlw	32
  2416  002CB4  6E01               	movwf	fputc@c^0,c
  2417  002CB6  C011  F003         	movff	pad@fp,fputc@fp
  2418  002CBA  C012  F004         	movff	pad@fp+1,fputc@fp+1
  2419  002CBE  ECC2  F015         	call	_fputc	;wreg free
  2420  002CC2                     
  2421                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2422  002CC2  4A18               	infsnz	pad@i^0,f,c
  2423  002CC4  2A19               	incf	(pad@i+1)^0,f,c
  2424  002CC6                     l1563:
  2425                           
  2426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2427  002CC6  501A               	movf	pad@w^0,w,c
  2428  002CC8  5C18               	subwf	pad@i^0,w,c
  2429  002CCA  5019               	movf	(pad@i+1)^0,w,c
  2430  002CCC  0A80               	xorlw	128
  2431  002CCE  6E17               	movwf	??_pad^0,c
  2432  002CD0  501B               	movf	(pad@w+1)^0,w,c
  2433  002CD2  0A80               	xorlw	128
  2434  002CD4  5817               	subwfb	??_pad^0,w,c
  2435  002CD6  A0D8               	btfss	status,0,c
  2436  002CD8  EF70  F016         	goto	u941
  2437  002CDC  EF72  F016         	goto	u940
  2438  002CE0                     u941:
  2439  002CE0  EF57  F016         	goto	l1559
  2440  002CE4                     u940:
  2441  002CE4                     
  2442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2443  002CE4  0100               	movlb	0	; () banked
  2444  002CE6  B166               	btfsc	_flags& (0+255),0,b
  2445  002CE8  EF78  F016         	goto	u951
  2446  002CEC  EF7A  F016         	goto	u950
  2447  002CF0                     u951:
  2448  002CF0  EF84  F016         	goto	l1567
  2449  002CF4                     u950:
  2450  002CF4                     
  2451                           ; BSR set to: 0
  2452                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2453  002CF4  C013  F00A         	movff	pad@buf,fputs@s
  2454  002CF8  C014  F00B         	movff	pad@buf+1,fputs@s+1
  2455  002CFC  C011  F00C         	movff	pad@fp,fputs@fp
  2456  002D00  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  2457  002D04  EC3E  F018         	call	_fputs	;wreg free
  2458  002D08                     l1567:
  2459                           
  2460                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2461  002D08  C013  F001         	movff	pad@buf,strlen@s
  2462  002D0C  C014  F002         	movff	pad@buf+1,strlen@s+1
  2463  002D10  EC80  F018         	call	_strlen	;wreg free
  2464  002D14  501A               	movf	pad@w^0,w,c
  2465  002D16  2401               	addwf	?_strlen^0,w,c
  2466  002D18  6E11               	movwf	?_pad^0,c
  2467  002D1A  501B               	movf	(pad@w+1)^0,w,c
  2468  002D1C  2002               	addwfc	(?_strlen+1)^0,w,c
  2469  002D1E  6E12               	movwf	(?_pad+1)^0,c
  2470  002D20  0012               	return		;funcret
  2471  002D22                     __end_of_pad:
  2472                           	callstack 0
  2473                           
  2474 ;; *************** function _strlen *****************
  2475 ;; Defined at:
  2476 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\strlen.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2479 ;;		 -> dbuf(32), 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2482 ;;		 -> dbuf(32), 
  2483 ;; Return value:  Size  Location     Type
  2484 ;;                  2    0[COMRAM] unsigned int 
  2485 ;; Registers used:
  2486 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2487 ;; Tracked objects:
  2488 ;;		On entry : 0/0
  2489 ;;		On exit  : 0/0
  2490 ;;		Unchanged: 0/0
  2491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2493 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2495 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2496 ;;Total ram usage:        4 bytes
  2497 ;; Hardware stack levels used:    1
  2498 ;; This function calls:
  2499 ;;		Nothing
  2500 ;; This function is called by:
  2501 ;;		_pad
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text11
  2506  003100                     __ptext11:
  2507                           	callstack 0
  2508  003100                     _strlen:
  2509                           	callstack 24
  2510  003100  C001  F003         	movff	strlen@s,strlen@a
  2511  003104  C002  F004         	movff	strlen@s+1,strlen@a+1
  2512  003108  EF88  F018         	goto	l1463
  2513  00310C                     l1461:
  2514  00310C  4A01               	infsnz	strlen@s^0,f,c
  2515  00310E  2A02               	incf	(strlen@s+1)^0,f,c
  2516  003110                     l1463:
  2517  003110  0060  F007  FFD9   	movff	strlen@s,fsr2l
  2518  003116  0060  F00B  FFDA   	movff	strlen@s+1,fsr2h
  2519  00311C  50DF               	movf	indf2,w,c
  2520  00311E  A4D8               	btfss	status,2,c
  2521  003120  EF94  F018         	goto	u781
  2522  003124  EF96  F018         	goto	u780
  2523  003128                     u781:
  2524  003128  EF86  F018         	goto	l1461
  2525  00312C                     u780:
  2526  00312C  5003               	movf	strlen@a^0,w,c
  2527  00312E  5C01               	subwf	strlen@s^0,w,c
  2528  003130  6E01               	movwf	?_strlen^0,c
  2529  003132  5004               	movf	(strlen@a+1)^0,w,c
  2530  003134  5802               	subwfb	(strlen@s+1)^0,w,c
  2531  003136  6E02               	movwf	(?_strlen+1)^0,c
  2532  003138  0012               	return		;funcret
  2533  00313A                     __end_of_strlen:
  2534                           	callstack 0
  2535                           
  2536 ;; *************** function _fputs *****************
  2537 ;; Defined at:
  2538 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputs.c"
  2539 ;; Parameters:    Size  Location     Type
  2540 ;;  s               2    9[COMRAM] PTR const unsigned char 
  2541 ;;		 -> dbuf(32), 
  2542 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2543 ;;		 -> sprintf@f(6), 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  i               2   14[COMRAM] int 
  2546 ;;  c               1   13[COMRAM] unsigned char 
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  2    9[COMRAM] int 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2557 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2559 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2560 ;;Total ram usage:        7 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    2
  2563 ;; This function calls:
  2564 ;;		_fputc
  2565 ;; This function is called by:
  2566 ;;		_pad
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text12
  2571  00307C                     __ptext12:
  2572                           	callstack 0
  2573  00307C                     _fputs:
  2574                           	callstack 22
  2575  00307C  0E00               	movlw	0
  2576  00307E  6E10               	movwf	(fputs@i+1)^0,c
  2577  003080  0E00               	movlw	0
  2578  003082  6E0F               	movwf	fputs@i^0,c
  2579  003084  EF4F  F018         	goto	l1457
  2580  003088                     l1453:
  2581  003088  C00E  F001         	movff	fputs@c,fputc@c
  2582  00308C  6A02               	clrf	(fputc@c+1)^0,c
  2583  00308E  C00C  F003         	movff	fputs@fp,fputc@fp
  2584  003092  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  2585  003096  ECC2  F015         	call	_fputc	;wreg free
  2586  00309A  4A0F               	infsnz	fputs@i^0,f,c
  2587  00309C  2A10               	incf	(fputs@i+1)^0,f,c
  2588  00309E                     l1457:
  2589  00309E  500F               	movf	fputs@i^0,w,c
  2590  0030A0  240A               	addwf	fputs@s^0,w,c
  2591  0030A2  6ED9               	movwf	fsr2l,c
  2592  0030A4  5010               	movf	(fputs@i+1)^0,w,c
  2593  0030A6  200B               	addwfc	(fputs@s+1)^0,w,c
  2594  0030A8  6EDA               	movwf	fsr2h,c
  2595  0030AA  50DF               	movf	indf2,w,c
  2596  0030AC  6E0E               	movwf	fputs@c^0,c
  2597  0030AE  500E               	movf	fputs@c^0,w,c
  2598  0030B0  A4D8               	btfss	status,2,c
  2599  0030B2  EF5D  F018         	goto	u771
  2600  0030B6  EF5F  F018         	goto	u770
  2601  0030BA                     u771:
  2602  0030BA  EF44  F018         	goto	l1453
  2603  0030BE                     u770:
  2604  0030BE  0012               	return		;funcret
  2605  0030C0                     __end_of_fputs:
  2606                           	callstack 0
  2607                           
  2608 ;; *************** function _fputc *****************
  2609 ;; Defined at:
  2610 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\nf_fputc.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  c               2    0[COMRAM] int 
  2613 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  2614 ;;		 -> sprintf@f(6), 
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  2    0[COMRAM] int 
  2619 ;; Registers used:
  2620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2626 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2628 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2629 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2630 ;;Total ram usage:        9 bytes
  2631 ;; Hardware stack levels used:    1
  2632 ;; Hardware stack levels required when called:    1
  2633 ;; This function calls:
  2634 ;;		_putch
  2635 ;; This function is called by:
  2636 ;;		_pad
  2637 ;;		_vfpfcnvrt
  2638 ;;		_fputs
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642                           	psect	text13
  2643  002B84                     __ptext13:
  2644                           	callstack 0
  2645  002B84                     _fputc:
  2646                           	callstack 25
  2647  002B84  5003               	movf	fputc@fp^0,w,c
  2648  002B86  1004               	iorwf	(fputc@fp+1)^0,w,c
  2649  002B88  B4D8               	btfsc	status,2,c
  2650  002B8A  EFC9  F015         	goto	u731
  2651  002B8E  EFCB  F015         	goto	u730
  2652  002B92                     u731:
  2653  002B92  EFD4  F015         	goto	l1441
  2654  002B96                     u730:
  2655  002B96  5003               	movf	fputc@fp^0,w,c
  2656  002B98  1004               	iorwf	(fputc@fp+1)^0,w,c
  2657  002B9A  A4D8               	btfss	status,2,c
  2658  002B9C  EFD2  F015         	goto	u741
  2659  002BA0  EFD4  F015         	goto	u740
  2660  002BA4                     u741:
  2661  002BA4  EFD9  F015         	goto	l1443
  2662  002BA8                     u740:
  2663  002BA8                     l1441:
  2664  002BA8  5001               	movf	fputc@c^0,w,c
  2665  002BAA  EC00  F019         	call	_putch
  2666  002BAE  EF2D  F016         	goto	l888
  2667  002BB2                     l1443:
  2668  002BB2  EE20 F004          	lfsr	2,4
  2669  002BB6  5003               	movf	fputc@fp^0,w,c
  2670  002BB8  26D9               	addwf	fsr2l,f,c
  2671  002BBA  5004               	movf	(fputc@fp+1)^0,w,c
  2672  002BBC  22DA               	addwfc	fsr2h,f,c
  2673  002BBE  50DE               	movf	postinc2,w,c
  2674  002BC0  10DE               	iorwf	postinc2,w,c
  2675  002BC2  B4D8               	btfsc	status,2,c
  2676  002BC4  EFE6  F015         	goto	u751
  2677  002BC8  EFE8  F015         	goto	u750
  2678  002BCC                     u751:
  2679  002BCC  EF03  F016         	goto	l1447
  2680  002BD0                     u750:
  2681  002BD0  EE20 F004          	lfsr	2,4
  2682  002BD4  5003               	movf	fputc@fp^0,w,c
  2683  002BD6  26D9               	addwf	fsr2l,f,c
  2684  002BD8  5004               	movf	(fputc@fp+1)^0,w,c
  2685  002BDA  22DA               	addwfc	fsr2h,f,c
  2686  002BDC  EE10 F002          	lfsr	1,2
  2687  002BE0  5003               	movf	fputc@fp^0,w,c
  2688  002BE2  26E1               	addwf	fsr1l,f,c
  2689  002BE4  5004               	movf	(fputc@fp+1)^0,w,c
  2690  002BE6  22E2               	addwfc	fsr1h,f,c
  2691  002BE8  50DE               	movf	postinc2,w,c
  2692  002BEA  5CE6               	subwf	postinc1,w,c
  2693  002BEC  50E6               	movf	postinc1,w,c
  2694  002BEE  0A80               	xorlw	128
  2695  002BF0  6E09               	movwf	(??_fputc+4)^0,c
  2696  002BF2  50DE               	movf	postinc2,w,c
  2697  002BF4  0A80               	xorlw	128
  2698  002BF6  5809               	subwfb	(??_fputc+4)^0,w,c
  2699  002BF8  B0D8               	btfsc	status,0,c
  2700  002BFA  EF01  F016         	goto	u761
  2701  002BFE  EF03  F016         	goto	u760
  2702  002C02                     u761:
  2703  002C02  EF2D  F016         	goto	l888
  2704  002C06                     u760:
  2705  002C06                     l1447:
  2706  002C06  EE20 F002          	lfsr	2,2
  2707  002C0A  5003               	movf	fputc@fp^0,w,c
  2708  002C0C  26D9               	addwf	fsr2l,f,c
  2709  002C0E  5004               	movf	(fputc@fp+1)^0,w,c
  2710  002C10  22DA               	addwfc	fsr2h,f,c
  2711  002C12  006F FF78  F005    	movff	postinc2,??_fputc
  2712  002C18  006F FF74  F006    	movff	postdec2,??_fputc+1
  2713  002C1E  0060  F00F  FFD9   	movff	fputc@fp,fsr2l
  2714  002C24  0060  F013  FFDA   	movff	fputc@fp+1,fsr2h
  2715  002C2A  006F FF78  F007    	movff	postinc2,??_fputc+2
  2716  002C30  006F FF74  F008    	movff	postdec2,??_fputc+3
  2717  002C36  5005               	movf	??_fputc^0,w,c
  2718  002C38  2407               	addwf	(??_fputc+2)^0,w,c
  2719  002C3A  6ED9               	movwf	fsr2l,c
  2720  002C3C  5006               	movf	(??_fputc+1)^0,w,c
  2721  002C3E  2008               	addwfc	(??_fputc+3)^0,w,c
  2722  002C40  6EDA               	movwf	fsr2h,c
  2723  002C42  0060  F007  FFDF   	movff	fputc@c,indf2
  2724  002C48  EE20 F002          	lfsr	2,2
  2725  002C4C  5003               	movf	fputc@fp^0,w,c
  2726  002C4E  26D9               	addwf	fsr2l,f,c
  2727  002C50  5004               	movf	(fputc@fp+1)^0,w,c
  2728  002C52  22DA               	addwfc	fsr2h,f,c
  2729  002C54  2ADE               	incf	postinc2,f,c
  2730  002C56  0E00               	movlw	0
  2731  002C58  22DD               	addwfc	postdec2,f,c
  2732  002C5A                     l888:
  2733  002C5A  0012               	return		;funcret
  2734  002C5C                     __end_of_fputc:
  2735                           	callstack 0
  2736                           
  2737 ;; *************** function _putch *****************
  2738 ;; Defined at:
  2739 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\putch.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  c               1    wreg     unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  c               1    0[COMRAM] unsigned char 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  1    wreg      void 
  2746 ;; Registers used:
  2747 ;;		wreg
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2757 ;;Total ram usage:        0 bytes
  2758 ;; Hardware stack levels used:    1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_fputc
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text14
  2767  003200                     __ptext14:
  2768                           	callstack 0
  2769  003200                     _putch:
  2770                           	callstack 25
  2771  003200  0012               	return		;funcret
  2772  003202                     __end_of_putch:
  2773                           	callstack 0
  2774                           
  2775 ;; *************** function _abs *****************
  2776 ;; Defined at:
  2777 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\abs.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;  a               2   18[COMRAM] int 
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  2   18[COMRAM] int 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2793 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2795 ;;Total ram usage:        4 bytes
  2796 ;; Hardware stack levels used:    1
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_dtoa
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text15
  2805  0030C0                     __ptext15:
  2806                           	callstack 0
  2807  0030C0                     _abs:
  2808                           	callstack 25
  2809  0030C0  BE14               	btfsc	(abs@a+1)^0,7,c
  2810  0030C2  EF6D  F018         	goto	u960
  2811  0030C6  5014               	movf	(abs@a+1)^0,w,c
  2812  0030C8  E106               	bnz	u961
  2813  0030CA  0413               	decf	abs@a^0,w,c
  2814  0030CC  B0D8               	btfsc	status,0,c
  2815  0030CE  EF6B  F018         	goto	u961
  2816  0030D2  EF6D  F018         	goto	u960
  2817  0030D6                     u961:
  2818  0030D6  EF7B  F018         	goto	l873
  2819  0030DA                     u960:
  2820  0030DA  C013  F015         	movff	abs@a,??_abs
  2821  0030DE  C014  F016         	movff	abs@a+1,??_abs+1
  2822  0030E2  1E15               	comf	??_abs^0,f,c
  2823  0030E4  1E16               	comf	(??_abs+1)^0,f,c
  2824  0030E6  4A15               	infsnz	??_abs^0,f,c
  2825  0030E8  2A16               	incf	(??_abs+1)^0,f,c
  2826  0030EA  C015  F013         	movff	??_abs,?_abs
  2827  0030EE  C016  F014         	movff	??_abs+1,?_abs+1
  2828  0030F2  EF7F  F018         	goto	l876
  2829  0030F6                     l873:
  2830  0030F6  C013  F013         	movff	abs@a,?_abs
  2831  0030FA  C014  F014         	movff	abs@a+1,?_abs+1
  2832  0030FE                     l876:
  2833  0030FE  0012               	return		;funcret
  2834  003100                     __end_of_abs:
  2835                           	callstack 0
  2836                           
  2837 ;; *************** function ___aomod *****************
  2838 ;; Defined at:
  2839 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aomod.c"
  2840 ;; Parameters:    Size  Location     Type
  2841 ;;  dividend        8    0[COMRAM] long long 
  2842 ;;  divisor         8    8[COMRAM] long long 
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  sign            1   17[COMRAM] unsigned char 
  2845 ;;  counter         1   16[COMRAM] unsigned char 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  8    0[COMRAM] long long 
  2848 ;; Registers used:
  2849 ;;		wreg, status,2, status,0
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2855 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2858 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2859 ;;Total ram usage:       18 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; This function calls:
  2862 ;;		Nothing
  2863 ;; This function is called by:
  2864 ;;		_dtoa
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text16
  2869  002838                     __ptext16:
  2870                           	callstack 0
  2871  002838                     ___aomod:
  2872                           	callstack 25
  2873  002838  0E00               	movlw	0
  2874  00283A  6E12               	movwf	___aomod@sign^0,c
  2875  00283C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2876  00283E  EF25  F014         	goto	u860
  2877  002842  EF23  F014         	goto	u861
  2878  002846                     u861:
  2879  002846  EF37  F014         	goto	l1521
  2880  00284A                     u860:
  2881  00284A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2882  00284C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2883  00284E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2884  002850  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2885  002852  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2886  002854  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2887  002856  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2888  002858  6C01               	negf	___aomod@dividend^0,c
  2889  00285A  0E00               	movlw	0
  2890  00285C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2891  00285E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2892  002860  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2893  002862  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2894  002864  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2895  002866  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2896  002868  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2897  00286A  0E01               	movlw	1
  2898  00286C  6E12               	movwf	___aomod@sign^0,c
  2899  00286E                     l1521:
  2900  00286E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2901  002870  EF3E  F014         	goto	u870
  2902  002874  EF3C  F014         	goto	u871
  2903  002878                     u871:
  2904  002878  EF4E  F014         	goto	l1525
  2905  00287C                     u870:
  2906  00287C  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2907  00287E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2908  002880  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2909  002882  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2910  002884  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2911  002886  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2912  002888  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2913  00288A  6C09               	negf	___aomod@divisor^0,c
  2914  00288C  0E00               	movlw	0
  2915  00288E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2916  002890  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2917  002892  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2918  002894  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2919  002896  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2920  002898  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2921  00289A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2922  00289C                     l1525:
  2923  00289C  5009               	movf	___aomod@divisor^0,w,c
  2924  00289E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2925  0028A0  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2926  0028A2  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2927  0028A4  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2928  0028A6  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2929  0028A8  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2930  0028AA  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2931  0028AC  B4D8               	btfsc	status,2,c
  2932  0028AE  EF5B  F014         	goto	u881
  2933  0028B2  EF5D  F014         	goto	u880
  2934  0028B6                     u881:
  2935  0028B6  EFA5  F014         	goto	l1541
  2936  0028BA                     u880:
  2937  0028BA  0E01               	movlw	1
  2938  0028BC  6E11               	movwf	___aomod@counter^0,c
  2939  0028BE  EF6B  F014         	goto	l1531
  2940  0028C2                     l1529:
  2941  0028C2  90D8               	bcf	status,0,c
  2942  0028C4  3609               	rlcf	___aomod@divisor^0,f,c
  2943  0028C6  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2944  0028C8  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2945  0028CA  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2946  0028CC  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2947  0028CE  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2948  0028D0  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2949  0028D2  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2950  0028D4  2A11               	incf	___aomod@counter^0,f,c
  2951  0028D6                     l1531:
  2952  0028D6  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2953  0028D8  EF70  F014         	goto	u891
  2954  0028DC  EF72  F014         	goto	u890
  2955  0028E0                     u891:
  2956  0028E0  EF61  F014         	goto	l1529
  2957  0028E4                     u890:
  2958  0028E4                     l1533:
  2959  0028E4  5009               	movf	___aomod@divisor^0,w,c
  2960  0028E6  5C01               	subwf	___aomod@dividend^0,w,c
  2961  0028E8  500A               	movf	(___aomod@divisor+1)^0,w,c
  2962  0028EA  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2963  0028EC  500B               	movf	(___aomod@divisor+2)^0,w,c
  2964  0028EE  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2965  0028F0  500C               	movf	(___aomod@divisor+3)^0,w,c
  2966  0028F2  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2967  0028F4  500D               	movf	(___aomod@divisor+4)^0,w,c
  2968  0028F6  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2969  0028F8  500E               	movf	(___aomod@divisor+5)^0,w,c
  2970  0028FA  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2971  0028FC  500F               	movf	(___aomod@divisor+6)^0,w,c
  2972  0028FE  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2973  002900  5010               	movf	(___aomod@divisor+7)^0,w,c
  2974  002902  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2975  002904  A0D8               	btfss	status,0,c
  2976  002906  EF87  F014         	goto	u901
  2977  00290A  EF89  F014         	goto	u900
  2978  00290E                     u901:
  2979  00290E  EF99  F014         	goto	l1537
  2980  002912                     u900:
  2981  002912  5009               	movf	___aomod@divisor^0,w,c
  2982  002914  5E01               	subwf	___aomod@dividend^0,f,c
  2983  002916  500A               	movf	(___aomod@divisor+1)^0,w,c
  2984  002918  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2985  00291A  500B               	movf	(___aomod@divisor+2)^0,w,c
  2986  00291C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2987  00291E  500C               	movf	(___aomod@divisor+3)^0,w,c
  2988  002920  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2989  002922  500D               	movf	(___aomod@divisor+4)^0,w,c
  2990  002924  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2991  002926  500E               	movf	(___aomod@divisor+5)^0,w,c
  2992  002928  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2993  00292A  500F               	movf	(___aomod@divisor+6)^0,w,c
  2994  00292C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2995  00292E  5010               	movf	(___aomod@divisor+7)^0,w,c
  2996  002930  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2997  002932                     l1537:
  2998  002932  90D8               	bcf	status,0,c
  2999  002934  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  3000  002936  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  3001  002938  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  3002  00293A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  3003  00293C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  3004  00293E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  3005  002940  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  3006  002942  3209               	rrcf	___aomod@divisor^0,f,c
  3007  002944  2E11               	decfsz	___aomod@counter^0,f,c
  3008  002946  EF72  F014         	goto	l1533
  3009  00294A                     l1541:
  3010  00294A  5012               	movf	___aomod@sign^0,w,c
  3011  00294C  B4D8               	btfsc	status,2,c
  3012  00294E  EFAB  F014         	goto	u911
  3013  002952  EFAD  F014         	goto	u910
  3014  002956                     u911:
  3015  002956  EFBD  F014         	goto	l1545
  3016  00295A                     u910:
  3017  00295A  1E08               	comf	(___aomod@dividend+7)^0,f,c
  3018  00295C  1E07               	comf	(___aomod@dividend+6)^0,f,c
  3019  00295E  1E06               	comf	(___aomod@dividend+5)^0,f,c
  3020  002960  1E05               	comf	(___aomod@dividend+4)^0,f,c
  3021  002962  1E04               	comf	(___aomod@dividend+3)^0,f,c
  3022  002964  1E03               	comf	(___aomod@dividend+2)^0,f,c
  3023  002966  1E02               	comf	(___aomod@dividend+1)^0,f,c
  3024  002968  6C01               	negf	___aomod@dividend^0,c
  3025  00296A  0E00               	movlw	0
  3026  00296C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  3027  00296E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  3028  002970  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  3029  002972  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  3030  002974  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  3031  002976  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  3032  002978  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  3033  00297A                     l1545:
  3034  00297A  C001  F001         	movff	___aomod@dividend,?___aomod
  3035  00297E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  3036  002982  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  3037  002986  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  3038  00298A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  3039  00298E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  3040  002992  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  3041  002996  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  3042  00299A  0012               	return		;funcret
  3043  00299C                     __end_of___aomod:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function ___aodiv *****************
  3047 ;; Defined at:
  3048 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\aodiv.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;  dividend        8    0[COMRAM] long long 
  3051 ;;  divisor         8    8[COMRAM] long long 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  quotient        8   18[COMRAM] long long 
  3054 ;;  sign            1   17[COMRAM] unsigned char 
  3055 ;;  counter         1   16[COMRAM] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  8    0[COMRAM] long long 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3065 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3066 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3068 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3069 ;;Total ram usage:       26 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_dtoa
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text17
  3079  0026B0                     __ptext17:
  3080                           	callstack 0
  3081  0026B0                     ___aodiv:
  3082                           	callstack 25
  3083  0026B0  0E00               	movlw	0
  3084  0026B2  6E12               	movwf	___aodiv@sign^0,c
  3085  0026B4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  3086  0026B6  EF61  F013         	goto	u790
  3087  0026BA  EF5F  F013         	goto	u791
  3088  0026BE                     u791:
  3089  0026BE  EF73  F013         	goto	l1477
  3090  0026C2                     u790:
  3091  0026C2  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  3092  0026C4  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  3093  0026C6  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  3094  0026C8  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  3095  0026CA  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  3096  0026CC  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  3097  0026CE  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  3098  0026D0  6C09               	negf	___aodiv@divisor^0,c
  3099  0026D2  0E00               	movlw	0
  3100  0026D4  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  3101  0026D6  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  3102  0026D8  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  3103  0026DA  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  3104  0026DC  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  3105  0026DE  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  3106  0026E0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  3107  0026E2  0E01               	movlw	1
  3108  0026E4  6E12               	movwf	___aodiv@sign^0,c
  3109  0026E6                     l1477:
  3110  0026E6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  3111  0026E8  EF7A  F013         	goto	u800
  3112  0026EC  EF78  F013         	goto	u801
  3113  0026F0                     u801:
  3114  0026F0  EF8C  F013         	goto	l1483
  3115  0026F4                     u800:
  3116  0026F4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  3117  0026F6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  3118  0026F8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  3119  0026FA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  3120  0026FC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  3121  0026FE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  3122  002700  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  3123  002702  6C01               	negf	___aodiv@dividend^0,c
  3124  002704  0E00               	movlw	0
  3125  002706  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  3126  002708  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  3127  00270A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  3128  00270C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  3129  00270E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  3130  002710  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  3131  002712  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  3132  002714  0E01               	movlw	1
  3133  002716  1A12               	xorwf	___aodiv@sign^0,f,c
  3134  002718                     l1483:
  3135  002718  EE20  F013         	lfsr	2,___aodiv@quotient
  3136  00271C  0E07               	movlw	7
  3137  00271E                     u811:
  3138  00271E  6ADE               	clrf	postinc2,c
  3139  002720  06E8               	decf	wreg,f,c
  3140  002722  E2FD               	bc	u811
  3141  002724  5009               	movf	___aodiv@divisor^0,w,c
  3142  002726  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  3143  002728  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  3144  00272A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  3145  00272C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  3146  00272E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  3147  002730  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  3148  002732  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  3149  002734  B4D8               	btfsc	status,2,c
  3150  002736  EF9F  F013         	goto	u821
  3151  00273A  EFA1  F013         	goto	u820
  3152  00273E                     u821:
  3153  00273E  EFF3  F013         	goto	l1505
  3154  002742                     u820:
  3155  002742  0E01               	movlw	1
  3156  002744  6E11               	movwf	___aodiv@counter^0,c
  3157  002746  EFAF  F013         	goto	l1491
  3158  00274A                     l1489:
  3159  00274A  90D8               	bcf	status,0,c
  3160  00274C  3609               	rlcf	___aodiv@divisor^0,f,c
  3161  00274E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  3162  002750  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  3163  002752  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  3164  002754  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  3165  002756  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  3166  002758  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  3167  00275A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  3168  00275C  2A11               	incf	___aodiv@counter^0,f,c
  3169  00275E                     l1491:
  3170  00275E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  3171  002760  EFB4  F013         	goto	u831
  3172  002764  EFB6  F013         	goto	u830
  3173  002768                     u831:
  3174  002768  EFA5  F013         	goto	l1489
  3175  00276C                     u830:
  3176  00276C                     l1493:
  3177  00276C  90D8               	bcf	status,0,c
  3178  00276E  3613               	rlcf	___aodiv@quotient^0,f,c
  3179  002770  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  3180  002772  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  3181  002774  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  3182  002776  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  3183  002778  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  3184  00277A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  3185  00277C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  3186  00277E  5009               	movf	___aodiv@divisor^0,w,c
  3187  002780  5C01               	subwf	___aodiv@dividend^0,w,c
  3188  002782  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3189  002784  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  3190  002786  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3191  002788  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  3192  00278A  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3193  00278C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  3194  00278E  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3195  002790  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  3196  002792  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3197  002794  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  3198  002796  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3199  002798  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  3200  00279A  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3201  00279C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  3202  00279E  A0D8               	btfss	status,0,c
  3203  0027A0  EFD4  F013         	goto	u841
  3204  0027A4  EFD6  F013         	goto	u840
  3205  0027A8                     u841:
  3206  0027A8  EFE7  F013         	goto	l1501
  3207  0027AC                     u840:
  3208  0027AC  5009               	movf	___aodiv@divisor^0,w,c
  3209  0027AE  5E01               	subwf	___aodiv@dividend^0,f,c
  3210  0027B0  500A               	movf	(___aodiv@divisor+1)^0,w,c
  3211  0027B2  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  3212  0027B4  500B               	movf	(___aodiv@divisor+2)^0,w,c
  3213  0027B6  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  3214  0027B8  500C               	movf	(___aodiv@divisor+3)^0,w,c
  3215  0027BA  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  3216  0027BC  500D               	movf	(___aodiv@divisor+4)^0,w,c
  3217  0027BE  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  3218  0027C0  500E               	movf	(___aodiv@divisor+5)^0,w,c
  3219  0027C2  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  3220  0027C4  500F               	movf	(___aodiv@divisor+6)^0,w,c
  3221  0027C6  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  3222  0027C8  5010               	movf	(___aodiv@divisor+7)^0,w,c
  3223  0027CA  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  3224  0027CC  8013               	bsf	___aodiv@quotient^0,0,c
  3225  0027CE                     l1501:
  3226  0027CE  90D8               	bcf	status,0,c
  3227  0027D0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  3228  0027D2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  3229  0027D4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  3230  0027D6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  3231  0027D8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  3232  0027DA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  3233  0027DC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  3234  0027DE  3209               	rrcf	___aodiv@divisor^0,f,c
  3235  0027E0  2E11               	decfsz	___aodiv@counter^0,f,c
  3236  0027E2  EFB6  F013         	goto	l1493
  3237  0027E6                     l1505:
  3238  0027E6  5012               	movf	___aodiv@sign^0,w,c
  3239  0027E8  B4D8               	btfsc	status,2,c
  3240  0027EA  EFF9  F013         	goto	u851
  3241  0027EE  EFFB  F013         	goto	u850
  3242  0027F2                     u851:
  3243  0027F2  EF0B  F014         	goto	l1509
  3244  0027F6                     u850:
  3245  0027F6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  3246  0027F8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  3247  0027FA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  3248  0027FC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  3249  0027FE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  3250  002800  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  3251  002802  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  3252  002804  6C13               	negf	___aodiv@quotient^0,c
  3253  002806  0E00               	movlw	0
  3254  002808  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  3255  00280A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  3256  00280C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  3257  00280E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  3258  002810  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  3259  002812  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  3260  002814  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  3261  002816                     l1509:
  3262  002816  C013  F001         	movff	___aodiv@quotient,?___aodiv
  3263  00281A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  3264  00281E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  3265  002822  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  3266  002826  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  3267  00282A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  3268  00282E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  3269  002832  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  3270  002836  0012               	return		;funcret
  3271  002838                     __end_of___aodiv:
  3272                           	callstack 0
  3273                           
  3274 ;; *************** function _lcd_putc *****************
  3275 ;; Defined at:
  3276 ;;		line 112 in file "./LCD_PIC18F.h"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  a               2    4[COMRAM] PTR unsigned char 
  3279 ;;		 -> STR_7(4), LCD_new@buffer(4), STR_5(13), STR_4(15), 
  3280 ;;		 -> STR_3(4), LCD_mAdato@buffer(4), STR_1(15), 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  i               2    8[COMRAM] int 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3293 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3294 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3295 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3296 ;;Total ram usage:        6 bytes
  3297 ;; Hardware stack levels used:    1
  3298 ;; Hardware stack levels required when called:    2
  3299 ;; This function calls:
  3300 ;;		_lcd_write_char
  3301 ;; This function is called by:
  3302 ;;		_LCD_mAdato
  3303 ;;		_LCD_new
  3304 ;; This function uses a non-reentrant model
  3305 ;;
  3306                           
  3307                           	psect	text18
  3308  002D22                     __ptext18:
  3309                           	callstack 0
  3310  002D22                     _lcd_putc:
  3311                           	callstack 27
  3312  002D22                     
  3313                           ;./LCD_PIC18F.h: 112: void lcd_putc(char *a);./LCD_PIC18F.h: 113: {;./LCD_PIC18F.h: 114:
      +                              int i;;./LCD_PIC18F.h: 115:    for(i=0;a[i]!='\0';i++)
  3314  002D22  0E00               	movlw	0
  3315  002D24  6E0A               	movwf	(lcd_putc@i+1)^0,c
  3316  002D26  0E00               	movlw	0
  3317  002D28  6E09               	movwf	lcd_putc@i^0,c
  3318  002D2A  EFB6  F016         	goto	l1759
  3319  002D2E                     l1755:
  3320                           
  3321                           ;./LCD_PIC18F.h: 116:       lcd_write_char(a[i]);
  3322  002D2E  5009               	movf	lcd_putc@i^0,w,c
  3323  002D30  2405               	addwf	lcd_putc@a^0,w,c
  3324  002D32  6E07               	movwf	??_lcd_putc^0,c
  3325  002D34  500A               	movf	(lcd_putc@i+1)^0,w,c
  3326  002D36  2006               	addwfc	(lcd_putc@a+1)^0,w,c
  3327  002D38  6E08               	movwf	(??_lcd_putc+1)^0,c
  3328  002D3A  0060  F01F  FFF6   	movff	??_lcd_putc,tblptrl
  3329  002D40  0060  F023  FFF7   	movff	??_lcd_putc+1,tblptrh
  3330  002D46  0E00               	movlw	low (__smallconst shr (0+16))
  3331  002D48  6EF8               	movwf	tblptru,c
  3332  002D4A  0E1F               	movlw	(high __ramtop+-1)
  3333  002D4C  64F7               	cpfsgt	tblptrh,c
  3334  002D4E  D003               	bra	u1237
  3335  002D50  0008               	tblrd		*
  3336  002D52  50F5               	movf	tablat,w,c
  3337  002D54  D007               	bra	u1230
  3338  002D56                     u1237:
  3339  002D56  006F FFDB FFE1     	movff	tblptrl,fsr1l
  3340  002D5C  006F FFDF FFE2     	movff	tblptrh,fsr1h
  3341  002D62  50E7               	movf	indf1,w,c
  3342  002D64                     u1230:
  3343  002D64  ECBA  F018         	call	_lcd_write_char
  3344  002D68  4A09               	infsnz	lcd_putc@i^0,f,c
  3345  002D6A  2A0A               	incf	(lcd_putc@i+1)^0,f,c
  3346  002D6C                     l1759:
  3347  002D6C  5009               	movf	lcd_putc@i^0,w,c
  3348  002D6E  2405               	addwf	lcd_putc@a^0,w,c
  3349  002D70  6E07               	movwf	??_lcd_putc^0,c
  3350  002D72  500A               	movf	(lcd_putc@i+1)^0,w,c
  3351  002D74  2006               	addwfc	(lcd_putc@a+1)^0,w,c
  3352  002D76  6E08               	movwf	(??_lcd_putc+1)^0,c
  3353  002D78  0060  F01F  FFF6   	movff	??_lcd_putc,tblptrl
  3354  002D7E  0060  F023  FFF7   	movff	??_lcd_putc+1,tblptrh
  3355  002D84  0E00               	movlw	low (__smallconst shr (0+16))
  3356  002D86  6EF8               	movwf	tblptru,c
  3357  002D88  0E1F               	movlw	(high __ramtop+-1)
  3358  002D8A  64F7               	cpfsgt	tblptrh,c
  3359  002D8C  D003               	bra	u1247
  3360  002D8E  0008               	tblrd		*
  3361  002D90  50F5               	movf	tablat,w,c
  3362  002D92  D007               	bra	u1240
  3363  002D94                     u1247:
  3364  002D94  006F FFDB FFE1     	movff	tblptrl,fsr1l
  3365  002D9A  006F FFDF FFE2     	movff	tblptrh,fsr1h
  3366  002DA0  50E7               	movf	indf1,w,c
  3367  002DA2                     u1240:
  3368  002DA2  0900               	iorlw	0
  3369  002DA4  A4D8               	btfss	status,2,c
  3370  002DA6  EFD7  F016         	goto	u1251
  3371  002DAA  EFD9  F016         	goto	u1250
  3372  002DAE                     u1251:
  3373  002DAE  EF97  F016         	goto	l1755
  3374  002DB2                     u1250:
  3375  002DB2                     
  3376                           ;./LCD_PIC18F.h: 117:    _delay((unsigned long)((10)*(8000000/4000.0)));
  3377  002DB2  0E1A               	movlw	26
  3378  002DB4  6E07               	movwf	??_lcd_putc^0,c
  3379  002DB6  0EF8               	movlw	248
  3380  002DB8                     u1557:
  3381  002DB8  2EE8               	decfsz	wreg,f,c
  3382  002DBA  D7FE               	bra	u1557
  3383  002DBC  2E07               	decfsz	??_lcd_putc^0,f,c
  3384  002DBE  D7FC               	bra	u1557
  3385  002DC0  D000               	nop2	
  3386  002DC2  0012               	return		;funcret
  3387  002DC4                     __end_of_lcd_putc:
  3388                           	callstack 0
  3389                           
  3390 ;; *************** function _lcd_write_char *****************
  3391 ;; Defined at:
  3392 ;;		line 96 in file "./LCD_PIC18F.h"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  a               1    wreg     unsigned char 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  a               1    3[COMRAM] unsigned char 
  3397 ;;  y               1    2[COMRAM] unsigned char 
  3398 ;;  temp            1    1[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0, cstack
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3409 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3411 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3412 ;;Total ram usage:        3 bytes
  3413 ;; Hardware stack levels used:    1
  3414 ;; Hardware stack levels required when called:    1
  3415 ;; This function calls:
  3416 ;;		_Lcd_Port
  3417 ;; This function is called by:
  3418 ;;		_lcd_putc
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text19
  3423  003174                     __ptext19:
  3424                           	callstack 0
  3425  003174                     _lcd_write_char:
  3426                           	callstack 27
  3427                           
  3428                           ;incstack = 0
  3429                           ;lcd_write_char@a stored from wreg
  3430  003174  6E04               	movwf	lcd_write_char@a^0,c
  3431  003176                     
  3432                           ;./LCD_PIC18F.h: 96: void lcd_write_char(char a);./LCD_PIC18F.h: 97: {;./LCD_PIC18F.h: 9
      +                          8:    char temp,y;;./LCD_PIC18F.h: 99:    temp = a&0x0F;
  3433  003176  5004               	movf	lcd_write_char@a^0,w,c
  3434  003178  0B0F               	andlw	15
  3435  00317A  6E02               	movwf	lcd_write_char@temp^0,c
  3436                           
  3437                           ;./LCD_PIC18F.h: 100:    y = a&0xF0;
  3438  00317C  5004               	movf	lcd_write_char@a^0,w,c
  3439  00317E  0BF0               	andlw	240
  3440  003180  6E03               	movwf	lcd_write_char@y^0,c
  3441  003182                     
  3442                           ;./LCD_PIC18F.h: 101:    LATBbits.LATB0 = 1;
  3443  003182  80BB               	bsf	187,0,c	;volatile
  3444  003184                     
  3445                           ;./LCD_PIC18F.h: 102:    Lcd_Port(y>>4);
  3446  003184  3803               	swapf	lcd_write_char@y^0,w,c
  3447  003186  0B0F               	andlw	15
  3448  003188  ECE7  F017         	call	_Lcd_Port
  3449  00318C                     
  3450                           ;./LCD_PIC18F.h: 103:    LATBbits.LATB1 = 1;
  3451  00318C  82BB               	bsf	187,1,c	;volatile
  3452  00318E                     
  3453                           ;./LCD_PIC18F.h: 104:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3454  00318E  0E1A               	movlw	26
  3455  003190                     u1567:
  3456  003190  2EE8               	decfsz	wreg,f,c
  3457  003192  D7FE               	bra	u1567
  3458  003194  D000               	nop2	
  3459  003196                     
  3460                           ;./LCD_PIC18F.h: 105:    LATBbits.LATB1 = 0;
  3461  003196  92BB               	bcf	187,1,c	;volatile
  3462  003198                     
  3463                           ;./LCD_PIC18F.h: 106:    Lcd_Port(temp);
  3464  003198  5002               	movf	lcd_write_char@temp^0,w,c
  3465  00319A  ECE7  F017         	call	_Lcd_Port
  3466  00319E                     
  3467                           ;./LCD_PIC18F.h: 107:    LATBbits.LATB1 = 1;
  3468  00319E  82BB               	bsf	187,1,c	;volatile
  3469  0031A0                     
  3470                           ;./LCD_PIC18F.h: 108:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  3471  0031A0  0E1A               	movlw	26
  3472  0031A2                     u1577:
  3473  0031A2  2EE8               	decfsz	wreg,f,c
  3474  0031A4  D7FE               	bra	u1577
  3475  0031A6  D000               	nop2	
  3476  0031A8                     
  3477                           ;./LCD_PIC18F.h: 109:    LATBbits.LATB1 = 0;
  3478  0031A8  92BB               	bcf	187,1,c	;volatile
  3479  0031AA  0012               	return		;funcret
  3480  0031AC                     __end_of_lcd_write_char:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function _lcd_gotoxy *****************
  3484 ;; Defined at:
  3485 ;;		line 56 in file "./LCD_PIC18F.h"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;  a               1    wreg     unsigned char 
  3488 ;;  b               1    3[COMRAM] unsigned char 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  a               1    4[COMRAM] unsigned char 
  3491 ;;  temp            1    7[COMRAM] unsigned char 
  3492 ;;  y               1    6[COMRAM] unsigned char 
  3493 ;;  z               1    5[COMRAM] unsigned char 
  3494 ;; Return value:  Size  Location     Type
  3495 ;;                  1    wreg      void 
  3496 ;; Registers used:
  3497 ;;		wreg, status,2, status,0, cstack
  3498 ;; Tracked objects:
  3499 ;;		On entry : 0/0
  3500 ;;		On exit  : 0/0
  3501 ;;		Unchanged: 0/0
  3502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3503 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3504 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3506 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3507 ;;Total ram usage:        5 bytes
  3508 ;; Hardware stack levels used:    1
  3509 ;; Hardware stack levels required when called:    2
  3510 ;; This function calls:
  3511 ;;		_Lcd_Cmd
  3512 ;; This function is called by:
  3513 ;;		_LCD_mAdato
  3514 ;;		_LCD_new
  3515 ;; This function uses a non-reentrant model
  3516 ;;
  3517                           
  3518                           	psect	text20
  3519  002F04                     __ptext20:
  3520                           	callstack 0
  3521  002F04                     _lcd_gotoxy:
  3522                           	callstack 27
  3523                           
  3524                           ;incstack = 0
  3525                           ;lcd_gotoxy@a stored from wreg
  3526  002F04  6E05               	movwf	lcd_gotoxy@a^0,c
  3527  002F06                     
  3528                           ;./LCD_PIC18F.h: 56: void lcd_gotoxy(char a, char b);./LCD_PIC18F.h: 57: {;./LCD_PIC18F.
      +                          h: 58:    char temp,z,y;;./LCD_PIC18F.h: 59:    if(a == 1)
  3529  002F06  0405               	decf	lcd_gotoxy@a^0,w,c
  3530  002F08  A4D8               	btfss	status,2,c
  3531  002F0A  EF89  F017         	goto	u1211
  3532  002F0E  EF8B  F017         	goto	u1210
  3533  002F12                     u1211:
  3534  002F12  EF9C  F017         	goto	l1745
  3535  002F16                     u1210:
  3536  002F16                     
  3537                           ;./LCD_PIC18F.h: 60:    {;./LCD_PIC18F.h: 61:      temp = 0x80 + b - 1;
  3538  002F16  5004               	movf	lcd_gotoxy@b^0,w,c
  3539  002F18  0F7F               	addlw	127
  3540  002F1A  6E08               	movwf	lcd_gotoxy@temp^0,c
  3541                           
  3542                           ;./LCD_PIC18F.h: 62:       z = temp>>4;
  3543  002F1C  3808               	swapf	lcd_gotoxy@temp^0,w,c
  3544  002F1E  0B0F               	andlw	15
  3545  002F20  6E06               	movwf	lcd_gotoxy@z^0,c
  3546                           
  3547                           ;./LCD_PIC18F.h: 63:       y = temp & 0x0F;
  3548  002F22  5008               	movf	lcd_gotoxy@temp^0,w,c
  3549  002F24  0B0F               	andlw	15
  3550  002F26  6E07               	movwf	lcd_gotoxy@y^0,c
  3551  002F28                     
  3552                           ;./LCD_PIC18F.h: 64:       Lcd_Cmd(z);
  3553  002F28  5006               	movf	lcd_gotoxy@z^0,w,c
  3554  002F2A  ECD6  F018         	call	_Lcd_Cmd
  3555  002F2E                     
  3556                           ;./LCD_PIC18F.h: 65:       Lcd_Cmd(y);
  3557  002F2E  5007               	movf	lcd_gotoxy@y^0,w,c
  3558  002F30  ECD6  F018         	call	_Lcd_Cmd
  3559                           
  3560                           ;./LCD_PIC18F.h: 66:    }
  3561  002F34  EFB4  F017         	goto	l59
  3562  002F38                     l1745:
  3563  002F38  0E02               	movlw	2
  3564  002F3A  1805               	xorwf	lcd_gotoxy@a^0,w,c
  3565  002F3C  A4D8               	btfss	status,2,c
  3566  002F3E  EFA3  F017         	goto	u1221
  3567  002F42  EFA5  F017         	goto	u1220
  3568  002F46                     u1221:
  3569  002F46  EFB4  F017         	goto	l59
  3570  002F4A                     u1220:
  3571  002F4A                     
  3572                           ;./LCD_PIC18F.h: 68:    {;./LCD_PIC18F.h: 69:       temp = 0xC0 + b - 1;
  3573  002F4A  5004               	movf	lcd_gotoxy@b^0,w,c
  3574  002F4C  0FBF               	addlw	191
  3575  002F4E  6E08               	movwf	lcd_gotoxy@temp^0,c
  3576                           
  3577                           ;./LCD_PIC18F.h: 70:       z = temp>>4;
  3578  002F50  3808               	swapf	lcd_gotoxy@temp^0,w,c
  3579  002F52  0B0F               	andlw	15
  3580  002F54  6E06               	movwf	lcd_gotoxy@z^0,c
  3581                           
  3582                           ;./LCD_PIC18F.h: 71:       y = temp & 0x0F;
  3583  002F56  5008               	movf	lcd_gotoxy@temp^0,w,c
  3584  002F58  0B0F               	andlw	15
  3585  002F5A  6E07               	movwf	lcd_gotoxy@y^0,c
  3586  002F5C                     
  3587                           ;./LCD_PIC18F.h: 72:       Lcd_Cmd(z);
  3588  002F5C  5006               	movf	lcd_gotoxy@z^0,w,c
  3589  002F5E  ECD6  F018         	call	_Lcd_Cmd
  3590  002F62                     
  3591                           ;./LCD_PIC18F.h: 73:       Lcd_Cmd(y);
  3592  002F62  5007               	movf	lcd_gotoxy@y^0,w,c
  3593  002F64  ECD6  F018         	call	_Lcd_Cmd
  3594  002F68                     l59:
  3595  002F68  0012               	return		;funcret
  3596  002F6A                     __end_of_lcd_gotoxy:
  3597                           	callstack 0
  3598                           
  3599 ;; *************** function _lcd_clear *****************
  3600 ;; Defined at:
  3601 ;;		line 50 in file "./LCD_PIC18F.h"
  3602 ;; Parameters:    Size  Location     Type
  3603 ;;		None
  3604 ;; Auto vars:     Size  Location     Type
  3605 ;;		None
  3606 ;; Return value:  Size  Location     Type
  3607 ;;                  1    wreg      void 
  3608 ;; Registers used:
  3609 ;;		wreg, status,2, cstack
  3610 ;; Tracked objects:
  3611 ;;		On entry : 0/0
  3612 ;;		On exit  : 0/0
  3613 ;;		Unchanged: 0/0
  3614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3619 ;;Total ram usage:        0 bytes
  3620 ;; Hardware stack levels used:    1
  3621 ;; Hardware stack levels required when called:    2
  3622 ;; This function calls:
  3623 ;;		_Lcd_Cmd
  3624 ;; This function is called by:
  3625 ;;		_LCD_mAdato
  3626 ;;		_LCD_new
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           
  3630                           	psect	text21
  3631  0031F2                     __ptext21:
  3632                           	callstack 0
  3633  0031F2                     _lcd_clear:
  3634                           	callstack 27
  3635  0031F2                     
  3636                           ;./LCD_PIC18F.h: 52:    Lcd_Cmd(0);
  3637  0031F2  0E00               	movlw	0
  3638  0031F4  ECD6  F018         	call	_Lcd_Cmd
  3639                           
  3640                           ;./LCD_PIC18F.h: 53:    Lcd_Cmd(1);
  3641  0031F8  0E01               	movlw	1
  3642  0031FA  ECD6  F018         	call	_Lcd_Cmd
  3643  0031FE  0012               	return		;funcret
  3644  003200                     __end_of_lcd_clear:
  3645                           	callstack 0
  3646                           
  3647 ;; *************** function _Lcd_Cmd *****************
  3648 ;; Defined at:
  3649 ;;		line 40 in file "./LCD_PIC18F.h"
  3650 ;; Parameters:    Size  Location     Type
  3651 ;;  a               1    wreg     unsigned char 
  3652 ;; Auto vars:     Size  Location     Type
  3653 ;;  a               1    2[COMRAM] unsigned char 
  3654 ;; Return value:  Size  Location     Type
  3655 ;;                  1    wreg      void 
  3656 ;; Registers used:
  3657 ;;		wreg, status,2, cstack
  3658 ;; Tracked objects:
  3659 ;;		On entry : 0/0
  3660 ;;		On exit  : 0/0
  3661 ;;		Unchanged: 0/0
  3662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3664 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3665 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3667 ;;Total ram usage:        2 bytes
  3668 ;; Hardware stack levels used:    1
  3669 ;; Hardware stack levels required when called:    1
  3670 ;; This function calls:
  3671 ;;		_Lcd_Port
  3672 ;; This function is called by:
  3673 ;;		_lcd_clear
  3674 ;;		_lcd_gotoxy
  3675 ;;		_lcd_init
  3676 ;;		_lcd_shift_right
  3677 ;;		_lcd_shift_left
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           	psect	text22
  3682  0031AC                     __ptext22:
  3683                           	callstack 0
  3684  0031AC                     _Lcd_Cmd:
  3685                           	callstack 28
  3686                           
  3687                           ;incstack = 0
  3688                           ;Lcd_Cmd@a stored from wreg
  3689  0031AC  6E03               	movwf	Lcd_Cmd@a^0,c
  3690  0031AE                     
  3691                           ;./LCD_PIC18F.h: 40: void Lcd_Cmd(char a);./LCD_PIC18F.h: 41: {;./LCD_PIC18F.h: 42:    L
      +                          ATBbits.LATB0 = 0;
  3692  0031AE  90BB               	bcf	187,0,c	;volatile
  3693  0031B0                     
  3694                           ;./LCD_PIC18F.h: 43:    Lcd_Port(a);
  3695  0031B0  5003               	movf	Lcd_Cmd@a^0,w,c
  3696  0031B2  ECE7  F017         	call	_Lcd_Port
  3697  0031B6                     
  3698                           ;./LCD_PIC18F.h: 44:    LATBbits.LATB1 = 1;
  3699  0031B6  82BB               	bsf	187,1,c	;volatile
  3700  0031B8                     
  3701                           ;./LCD_PIC18F.h: 45:    _delay((unsigned long)((4)*(8000000/4000.0)));
  3702  0031B8  0E0B               	movlw	11
  3703  0031BA  6E02               	movwf	??_Lcd_Cmd^0,c
  3704  0031BC  0E62               	movlw	98
  3705  0031BE                     u1587:
  3706  0031BE  2EE8               	decfsz	wreg,f,c
  3707  0031C0  D7FE               	bra	u1587
  3708  0031C2  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  3709  0031C4  D7FC               	bra	u1587
  3710  0031C6  D000               	nop2	
  3711  0031C8                     
  3712                           ;./LCD_PIC18F.h: 46:    LATBbits.LATB1 = 0;
  3713  0031C8  92BB               	bcf	187,1,c	;volatile
  3714  0031CA                     
  3715                           ;./LCD_PIC18F.h: 47:    _delay((unsigned long)((4)*(8000000/4000.0)));
  3716  0031CA  0E0B               	movlw	11
  3717  0031CC  6E02               	movwf	??_Lcd_Cmd^0,c
  3718  0031CE  0E62               	movlw	98
  3719  0031D0                     u1597:
  3720  0031D0  2EE8               	decfsz	wreg,f,c
  3721  0031D2  D7FE               	bra	u1597
  3722  0031D4  2E02               	decfsz	??_Lcd_Cmd^0,f,c
  3723  0031D6  D7FC               	bra	u1597
  3724  0031D8  D000               	nop2	
  3725  0031DA  0012               	return		;funcret
  3726  0031DC                     __end_of_Lcd_Cmd:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function _Lcd_Port *****************
  3730 ;; Defined at:
  3731 ;;		line 18 in file "./LCD_PIC18F.h"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;  a               1    wreg     unsigned char 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  a               1    0[COMRAM] unsigned char 
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3748 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3749 ;;Total ram usage:        1 bytes
  3750 ;; Hardware stack levels used:    1
  3751 ;; This function calls:
  3752 ;;		Nothing
  3753 ;; This function is called by:
  3754 ;;		_Lcd_Cmd
  3755 ;;		_lcd_init
  3756 ;;		_lcd_write_char
  3757 ;; This function uses a non-reentrant model
  3758 ;;
  3759                           
  3760                           	psect	text23
  3761  002FCE                     __ptext23:
  3762                           	callstack 0
  3763  002FCE                     _Lcd_Port:
  3764                           	callstack 29
  3765                           
  3766                           ;incstack = 0
  3767                           ;Lcd_Port@a stored from wreg
  3768  002FCE  6E01               	movwf	Lcd_Port@a^0,c
  3769  002FD0                     
  3770                           ;./LCD_PIC18F.h: 18: void Lcd_Port(char a);./LCD_PIC18F.h: 19: {;./LCD_PIC18F.h: 20:    
      +                          if(a & 1)
  3771  002FD0  A001               	btfss	Lcd_Port@a^0,0,c
  3772  002FD2  EFED  F017         	goto	u1121
  3773  002FD6  EFEF  F017         	goto	u1120
  3774  002FDA                     u1121:
  3775  002FDA  EFF2  F017         	goto	l39
  3776  002FDE                     u1120:
  3777  002FDE                     
  3778                           ;./LCD_PIC18F.h: 21:       LATBbits.LATB2 = 1;
  3779  002FDE  84BB               	bsf	187,2,c	;volatile
  3780  002FE0  EFF3  F017         	goto	l1641
  3781  002FE4                     l39:
  3782                           
  3783                           ;./LCD_PIC18F.h: 23:       LATBbits.LATB2 = 0;
  3784  002FE4  94BB               	bcf	187,2,c	;volatile
  3785  002FE6                     l1641:
  3786                           
  3787                           ;./LCD_PIC18F.h: 25:    if(a & 2)
  3788  002FE6  A201               	btfss	Lcd_Port@a^0,1,c
  3789  002FE8  EFF8  F017         	goto	u1131
  3790  002FEC  EFFA  F017         	goto	u1130
  3791  002FF0                     u1131:
  3792  002FF0  EFFD  F017         	goto	l41
  3793  002FF4                     u1130:
  3794  002FF4                     
  3795                           ;./LCD_PIC18F.h: 26:       LATBbits.LATB3 = 1;
  3796  002FF4  86BB               	bsf	187,3,c	;volatile
  3797  002FF6  EFFE  F017         	goto	l1645
  3798  002FFA                     l41:
  3799                           
  3800                           ;./LCD_PIC18F.h: 28:       LATBbits.LATB3 = 0;
  3801  002FFA  96BB               	bcf	187,3,c	;volatile
  3802  002FFC                     l1645:
  3803                           
  3804                           ;./LCD_PIC18F.h: 30:    if(a & 4)
  3805  002FFC  A401               	btfss	Lcd_Port@a^0,2,c
  3806  002FFE  EF03  F018         	goto	u1141
  3807  003002  EF05  F018         	goto	u1140
  3808  003006                     u1141:
  3809  003006  EF08  F018         	goto	l43
  3810  00300A                     u1140:
  3811  00300A                     
  3812                           ;./LCD_PIC18F.h: 31:       LATBbits.LATB4 = 1;
  3813  00300A  88BB               	bsf	187,4,c	;volatile
  3814  00300C  EF09  F018         	goto	l1649
  3815  003010                     l43:
  3816                           
  3817                           ;./LCD_PIC18F.h: 33:       LATBbits.LATB4 = 0;
  3818  003010  98BB               	bcf	187,4,c	;volatile
  3819  003012                     l1649:
  3820                           
  3821                           ;./LCD_PIC18F.h: 35:    if(a & 8)
  3822  003012  A601               	btfss	Lcd_Port@a^0,3,c
  3823  003014  EF0E  F018         	goto	u1151
  3824  003018  EF10  F018         	goto	u1150
  3825  00301C                     u1151:
  3826  00301C  EF13  F018         	goto	l45
  3827  003020                     u1150:
  3828  003020                     
  3829                           ;./LCD_PIC18F.h: 36:       LATBbits.LATB5 = 1;
  3830  003020  8ABB               	bsf	187,5,c	;volatile
  3831  003022  EF14  F018         	goto	l47
  3832  003026                     l45:
  3833                           
  3834                           ;./LCD_PIC18F.h: 38:       LATBbits.LATB5 = 0;
  3835  003026  9ABB               	bcf	187,5,c	;volatile
  3836  003028                     l47:
  3837  003028  0012               	return		;funcret
  3838  00302A                     __end_of_Lcd_Port:
  3839                           	callstack 0
  3840                           
  3841 ;; *************** function _CONFIG_PIC *****************
  3842 ;; Defined at:
  3843 ;;		line 75 in file "main.c"
  3844 ;; Parameters:    Size  Location     Type
  3845 ;;		None
  3846 ;; Auto vars:     Size  Location     Type
  3847 ;;		None
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      void 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3861 ;;Total ram usage:        0 bytes
  3862 ;; Hardware stack levels used:    1
  3863 ;; This function calls:
  3864 ;;		Nothing
  3865 ;; This function is called by:
  3866 ;;		_main
  3867 ;; This function uses a non-reentrant model
  3868 ;;
  3869                           
  3870                           	psect	text24
  3871  00313A                     __ptext24:
  3872                           	callstack 0
  3873  00313A                     _CONFIG_PIC:
  3874                           	callstack 30
  3875  00313A                     
  3876                           ;main.c: 76:     OSCCON1=0b01110000;
  3877  00313A  0E70               	movlw	112
  3878  00313C  0139               	movlb	57	; () banked
  3879  00313E  6FD9               	movwf	217,b	;volatile
  3880                           
  3881                           ;main.c: 78:     PORTA =0;LATA=0;ANSELA=0;TRISA=0B00111100;
  3882  003140  0E00               	movlw	0
  3883  003142  6ECA               	movwf	202,c	;volatile
  3884  003144  0E00               	movlw	0
  3885  003146  6EBA               	movwf	186,c	;volatile
  3886  003148  0E00               	movlw	0
  3887  00314A  013A               	movlb	58	; () banked
  3888  00314C  6F40               	movwf	64,b	;volatile
  3889  00314E  0E3C               	movlw	60
  3890  003150  6EC2               	movwf	194,c	;volatile
  3891                           
  3892                           ;main.c: 79:     PORTB =0;LATB=0;ANSELB=0;TRISB=0;
  3893  003152  0E00               	movlw	0
  3894  003154  6ECB               	movwf	203,c	;volatile
  3895  003156  0E00               	movlw	0
  3896  003158  6EBB               	movwf	187,c	;volatile
  3897  00315A  0E00               	movlw	0
  3898  00315C  6F50               	movwf	80,b	;volatile
  3899  00315E  0E00               	movlw	0
  3900  003160  6EC3               	movwf	195,c	;volatile
  3901                           
  3902                           ;main.c: 80:     PORTC =0;LATC=0;ANSELC=0;TRISC=0;
  3903  003162  0E00               	movlw	0
  3904  003164  6ECC               	movwf	204,c	;volatile
  3905  003166  0E00               	movlw	0
  3906  003168  6EBC               	movwf	188,c	;volatile
  3907  00316A  0E00               	movlw	0
  3908  00316C  6F60               	movwf	96,b	;volatile
  3909  00316E  0E00               	movlw	0
  3910  003170  6EC4               	movwf	196,c	;volatile
  3911  003172                     
  3912                           ; BSR set to: 58
  3913  003172  0012               	return		;funcret
  3914  003174                     __end_of_CONFIG_PIC:
  3915                           	callstack 0
  3916                           
  3917                           	psect	rparam
  3918  0000                     
  3919                           	psect	idloc
  3920                           
  3921                           ;Config register IDLOC0 @ 0x200000
  3922                           ;	unspecified, using default values
  3923  200000                     	org	2097152
  3924  200000  0FFF               	dw	4095
  3925                           
  3926                           ;Config register IDLOC1 @ 0x200002
  3927                           ;	unspecified, using default values
  3928  200002                     	org	2097154
  3929  200002  0FFF               	dw	4095
  3930                           
  3931                           ;Config register IDLOC2 @ 0x200004
  3932                           ;	unspecified, using default values
  3933  200004                     	org	2097156
  3934  200004  0FFF               	dw	4095
  3935                           
  3936                           ;Config register IDLOC3 @ 0x200006
  3937                           ;	unspecified, using default values
  3938  200006                     	org	2097158
  3939  200006  0FFF               	dw	4095
  3940                           
  3941                           ;Config register IDLOC4 @ 0x200008
  3942                           ;	unspecified, using default values
  3943  200008                     	org	2097160
  3944  200008  0FFF               	dw	4095
  3945                           
  3946                           ;Config register IDLOC5 @ 0x20000A
  3947                           ;	unspecified, using default values
  3948  20000A                     	org	2097162
  3949  20000A  0FFF               	dw	4095
  3950                           
  3951                           ;Config register IDLOC6 @ 0x20000C
  3952                           ;	unspecified, using default values
  3953  20000C                     	org	2097164
  3954  20000C  0FFF               	dw	4095
  3955                           
  3956                           ;Config register IDLOC7 @ 0x20000E
  3957                           ;	unspecified, using default values
  3958  20000E                     	org	2097166
  3959  20000E  0FFF               	dw	4095
  3960                           
  3961                           	psect	config
  3962                           
  3963                           ;Config register CONFIG1L @ 0x300000
  3964                           ;	External Oscillator Selection
  3965                           ;	FEXTOSC = HS, HS (crystal oscillator) above 8 MHz; PFM set to high power
  3966                           ;	Reset Oscillator Selection
  3967                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3968  300000                     	org	3145728
  3969  300000  FA                 	db	250
  3970                           
  3971                           ;Config register CONFIG1H @ 0x300001
  3972                           ;	Clock out Enable bit
  3973                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3974                           ;	PRLOCKED One-Way Set Enable bit
  3975                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
  3976                           ;	Clock Switch Enable bit
  3977                           ;	CSWEN = OFF, The NOSC and NDIV bits cannot be changed by user software
  3978                           ;	Fail-Safe Clock Monitor Enable bit
  3979                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3980  300001                     	org	3145729
  3981  300001  D5                 	db	213
  3982                           
  3983                           ;Config register CONFIG2L @ 0x300002
  3984                           ;	MCLR Enable bit
  3985                           ;	MCLRE = INTMCLR, If LVP = 0, MCLR pin function is port defined function; If LVP =1, RE
      +                          3 pin fuction is MCLR
  3986                           ;	Power-up timer selection bits
  3987                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3988                           ;	Multi-vector enable bit
  3989                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3990                           ;	IVTLOCK bit One-way set enable bit
  3991                           ;	IVT1WAY = ON, IVTLOCK bit can be cleared and set only once
  3992                           ;	Low Power BOR Enable bit
  3993                           ;	LPBOREN = OFF, ULPBOR disabled
  3994                           ;	Brown-out Reset Enable bits
  3995                           ;	BOREN = OFF, Brown-out Reset disabled
  3996  300002                     	org	3145730
  3997  300002  3E                 	db	62
  3998                           
  3999                           ;Config register CONFIG2H @ 0x300003
  4000                           ;	Brown-out Reset Voltage Selection bits
  4001                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  4002                           ;	ZCD Disable bit
  4003                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  4004                           ;	PPSLOCK bit One-Way Set Enable bit
  4005                           ;	PPS1WAY = ON, PPSLOCK bit can be cleared and set only once; PPS registers remain locke
      +                          d after one clear/set cycle
  4006                           ;	Stack Full/Underflow Reset Enable bit
  4007                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4008                           ;	Debugger Enable bit
  4009                           ;	DEBUG = OFF, Background debugger disabled
  4010                           ;	Extended Instruction Set Enable bit
  4011                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4012  300003                     	org	3145731
  4013  300003  FF                 	db	255
  4014                           
  4015                           ;Config register CONFIG3L @ 0x300004
  4016                           ;	WDT Period selection bits
  4017                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4018                           ;	WDT operating mode
  4019                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4020  300004                     	org	3145732
  4021  300004  9F                 	db	159
  4022                           
  4023                           ;Config register CONFIG3H @ 0x300005
  4024                           ;	WDT Window Select bits
  4025                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4026                           ;	WDT input clock selector
  4027                           ;	WDTCCS = SC, Software Control
  4028  300005                     	org	3145733
  4029  300005  FF                 	db	255
  4030                           
  4031                           ;Config register CONFIG4L @ 0x300006
  4032                           ;	Boot Block Size selection bits
  4033                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4034                           ;	Boot Block enable bit
  4035                           ;	BBEN = OFF, Boot block disabled
  4036                           ;	Storage Area Flash enable bit
  4037                           ;	SAFEN = OFF, SAF disabled
  4038                           ;	Application Block write protection bit
  4039                           ;	WRTAPP = OFF, Application Block not write protected
  4040  300006                     	org	3145734
  4041  300006  FF                 	db	255
  4042                           
  4043                           ;Config register CONFIG4H @ 0x300007
  4044                           ;	Configuration Register Write Protection bit
  4045                           ;	WRTB = OFF, Configuration registers (300000-30000Bh) not write-protected
  4046                           ;	Boot Block Write Protection bit
  4047                           ;	WRTC = OFF, Boot Block (000000-0007FFh) not write-protected
  4048                           ;	Data EEPROM Write Protection bit
  4049                           ;	WRTD = OFF, Data EEPROM not write-protected
  4050                           ;	SAF Write protection bit
  4051                           ;	WRTSAF = OFF, SAF not Write Protected
  4052                           ;	Low Voltage Programming Enable bit
  4053                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  4054  300007                     	org	3145735
  4055  300007  DF                 	db	223
  4056                           
  4057                           ;Config register CONFIG5L @ 0x300008
  4058                           ;	PFM and Data EEPROM Code Protection bit
  4059                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4060  300008                     	org	3145736
  4061  300008  FF                 	db	255
  4062                           
  4063                           ;Config register CONFIG5H @ 0x300009
  4064                           ;	unspecified, using default values
  4065  300009                     	org	3145737
  4066  300009  FF                 	db	255
  4067                           tosu	equ	0x3FFF
  4068                           tosh	equ	0x3FFE
  4069                           tosl	equ	0x3FFD
  4070                           stkptr	equ	0x3FFC
  4071                           pclatu	equ	0x3FFB
  4072                           pclath	equ	0x3FFA
  4073                           pcl	equ	0x3FF9
  4074                           tblptru	equ	0x3FF8
  4075                           tblptrh	equ	0x3FF7
  4076                           tblptrl	equ	0x3FF6
  4077                           tablat	equ	0x3FF5
  4078                           prodh	equ	0x3FF4
  4079                           prodl	equ	0x3FF3
  4080                           indf0	equ	0x3FEF
  4081                           postinc0	equ	0x3FEE
  4082                           postdec0	equ	0x3FED
  4083                           preinc0	equ	0x3FEC
  4084                           plusw0	equ	0x3FEB
  4085                           fsr0h	equ	0x3FEA
  4086                           fsr0l	equ	0x3FE9
  4087                           wreg	equ	0x3FE8
  4088                           indf1	equ	0x3FE7
  4089                           postinc1	equ	0x3FE6
  4090                           postdec1	equ	0x3FE5
  4091                           preinc1	equ	0x3FE4
  4092                           plusw1	equ	0x3FE3
  4093                           fsr1h	equ	0x3FE2
  4094                           fsr1l	equ	0x3FE1
  4095                           bsr	equ	0x3FE0
  4096                           indf2	equ	0x3FDF
  4097                           postinc2	equ	0x3FDE
  4098                           postdec2	equ	0x3FDD
  4099                           preinc2	equ	0x3FDC
  4100                           plusw2	equ	0x3FDB
  4101                           fsr2h	equ	0x3FDA
  4102                           fsr2l	equ	0x3FD9
  4103                           status	equ	0x3FD8

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     22      64
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> LCD_new@buffer(BANK0[4]), LCD_mAdato@buffer(BANK0[4]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_2(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_2(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_6(CODE[3]), STR_2(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4
		 -> LCD_new@buffer(BANK0[4]), LCD_mAdato@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S621_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 4
		 -> LCD_new@buffer(BANK0[4]), LCD_mAdato@buffer(BANK0[4]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 4
		 -> LCD_new@buffer(BANK0[4]), LCD_mAdato@buffer(BANK0[4]), 

    lcd_putc@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_7(CODE[4]), LCD_new@buffer(BANK0[4]), STR_5(CODE[13]), STR_4(CODE[15]), 
		 -> STR_3(CODE[4]), LCD_mAdato@buffer(BANK0[4]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_LCD_mAdato
    _main->_LCD_new
    _lcd_init->_Lcd_Cmd
    _LCD_new->_sprintf
    ___aldiv->___lmul
    _LCD_mAdato->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _lcd_putc->_lcd_write_char
    _lcd_write_char->_Lcd_Port
    _lcd_gotoxy->_Lcd_Cmd
    _lcd_clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_LCD_new
    _LCD_new->_sprintf
    _LCD_mAdato->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   18352
                                             20 BANK0      2     2      0
                         _CONFIG_PIC
                         _LCD_mAdato
                            _LCD_new
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     198
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _LCD_new                                             12    10      2    9500
                                             93 COMRAM     2     0      2
                                             10 BANK0     10    10      0
                            ___aldiv
                             ___lmul
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_putc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_mAdato                                           6     4      2    8654
                                             93 COMRAM     2     0      2
                                             10 BANK0      4     4      0
                          _lcd_clear
                         _lcd_gotoxy
                           _lcd_putc
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    6608
                                             87 COMRAM     6     0      6
                                              0 BANK0     10    10      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             6     4      2     800
                                              4 COMRAM     6     4      2
                     _lcd_write_char
 ---------------------------------------------------------------------------------
 (3) _lcd_write_char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _lcd_gotoxy                                           5     4      1     912
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CONFIG_PIC                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CONFIG_PIC
   _LCD_mAdato
     _lcd_clear
       _Lcd_Cmd
         _Lcd_Port
     _lcd_gotoxy
       _Lcd_Cmd
         _Lcd_Port
     _lcd_putc
       _lcd_write_char
         _Lcd_Port
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _LCD_new
     ___aldiv
       ___lmul (ARG)
     ___lmul
     _lcd_clear
       _Lcd_Cmd
         _Lcd_Port
     _lcd_gotoxy
       _Lcd_Cmd
         _Lcd_Port
     _lcd_putc
       _lcd_write_char
         _Lcd_Port
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
           _fputc
             _putch
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      40       5       40.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9F      58        0.0%
DATA                 0      0      9F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 18 23:17:43 2021

                     l41 2FFA                       l50 31DA                       l43 3010  
                     l45 3026                       l53 31FE                       l62 2E32  
                     l47 3028                       l39 2FE4                       l71 2DC2  
                     l65 31AA                       l82 3172                       l59 2F68  
                     l91 2B82                       l88 2FCC              ?_LCD_mAdato 005E  
                    l112 269A                      l130 2E8C                      l131 2E9C  
                    l116 26AC                      l233 2836                      l246 299A  
                    l198 2AA6                      l824 2CA2                      l905 3138  
                    l827 2CE4                      l835 20D4                      l829 2D20  
                    l837 20DC                      l862 2516                      l855 2316  
                    l873 30F6                      l876 30FE                      l868 2EFA  
                    l869 2F02                      l797 307A                      l888 2C5A  
                    l896 30BE                      l899 3200                      u800 26F4  
                    u801 26F0                      u730 2B96                      u811 271E  
                    u731 2B92                      u820 2742                      u900 2912  
                    u740 2BA8                      u821 273E                      u901 290E  
                    u741 2BA4                      u830 276C                      u910 295A  
                    u750 2BD0                      u831 2768                      u911 2956  
                    u751 2BCC                      u840 27AC                      u760 2C06  
                    u920 2C6C                      u841 27A8                      u761 2C02  
                    u921 2C68                      u850 27F6                      u770 30BE  
                    u930 2C8E                      u851 27F2                      u771 30BA  
                    u931 2C8A                      u860 284A                      u780 312C  
                    u940 2CE4                      u861 2846                      u781 3128  
                    u941 2CE0                      u790 26C2                      u870 287C  
                    u950 2CF4                      u791 26BE                      u871 2878  
                    u951 2CF0                      u880 28BA                      u960 30DA  
                    u881 28B6                      u961 30D6                      u890 28E4  
                    u970 2064                      u891 28E0                      u971 205E  
                    u980 2066                      u990 207C                      u991 2078  
                    _abs 30C0                      _pad 2C5C                      wreg 003FE8  
            lcd_gotoxy@a 0005              lcd_gotoxy@b 0004              lcd_gotoxy@y 0007  
            lcd_gotoxy@z 0006          __end_of_LCD_new 2B84                     ?_abs 0013  
                   l1501 27CE                     l1503 27E0                     l1505 27E6  
                   l1521 286E                     l1513 2838                     l1441 2BA8  
                   l1601 2120                     l1507 27F6                     l1531 28D6  
                   l1523 287C                     l1515 283C                     l1443 2BB2  
                   l1451 307C                     l1611 222C                     l1603 21A2  
                   l1701 31B8                     l1509 2816                     l1533 28E4  
                   l1541 294A                     l1525 289C                     l1517 284A  
                   l1445 2BD0                     l1437 2B84                     l1453 3088  
                   l1461 310C                     l1621 22A0                     l1613 224A  
                   l1605 21A8                     l1703 31C8                     l1711 3184  
                   l1471 26B4                     l1543 295A                     l1535 2912  
                   l1527 28BA                     l1519 286A                     l1447 2C06  
                   l1439 2B96                     l1455 309A                     l1463 3110  
                   l1551 2C6C                     l1631 22DC                     l1623 22B0  
                   l1615 2264                     l1607 21AE                     l1641 2FE6  
                   l1705 31CA                     l1721 319E                     l1713 318C  
                   l1481 2714                     l1473 26C2                     l1545 297A  
                   l1537 2932                     l1529 28C2                     l1457 309E  
                   l1465 312C                     l1561 2CC2                     l1553 2C80  
                   l1625 22B6                     l1633 22EE                     l1617 227E  
                   l1609 2212                     l1801 29F4                     l1651 3020  
                   l1643 2FF4                     l1723 31A0                     l1715 318E  
                   l1707 3176                     l1491 275E                     l1483 2718  
                   l1475 26E2                     l1539 2944                     l1571 30C0  
                   l1459 3100                     l1563 2CC6                     l1555 2C8E  
                   l1627 22C8                     l1619 228E                     l1731 2EB4  
                   l1811 2A36                     l1803 2A0A                     l1645 2FFC  
                   l1637 2FD0                     l1741 2F28                     l1725 31A8  
                   l1717 3196                     l1709 3182                     l1493 276C  
                   l1485 2724                     l1477 26E6                     l1469 26B0  
                   l1573 30DA                     l1565 2CF4                     l1557 2C9A  
                   l1549 2C5C                     l1629 22D4                     l1581 209C  
                   l1661 236C                     l1653 2318                     l1733 2EDA  
                   l1813 2A54                     l1805 2A12                     l1821 2A76  
                   l1901 2B76                     l1647 300A                     l1639 2FDE  
                   l1735 31F2                     l1751 2F62                     l1743 2F2E  
                   l1719 3198                     l1495 277E                     l1487 2742  
                   l1479 26F4                     l1567 2D08                     l1559 2CAE  
                   l1591 20F6                     l1583 20AC                     l1575 2034  
                   l1671 2458                     l1663 2398                     l1655 2344  
                   l1727 2E9E                     l1823 2A86                     l1815 2A64  
                   l1807 2A1E                     l1831 2DCA                     l1911 2538  
                   l1649 3012                     l1745 2F38                     l1737 2F06  
                   l1761 2DB2                     l1753 2D22                     l1497 27AC  
                   l1489 274A                     l1593 2104                     l1585 20AE  
                   l1577 2054                     l1673 2484                     l1681 24B6  
                   l1665 23C4                     l1657 2356                     l1729 2EA6  
                   l1825 2A96                     l1817 2A66                     l1809 2A2C  
                   l1841 2E02                     l1833 2DD8                     l1921 2576  
                   l1913 2544                     l1747 2F4A                     l1739 2F16  
                   l1755 2D2E                     l1499 27CC                     l1595 210A  
                   l1587 20C8                     l1579 207C                     l1683 24C8  
                   l1675 2496                     l1667 2420                     l1659 2368  
                   l1771 3068                     l1763 302A                     l1819 2A70  
                   l1851 2E20                     l1843 2E08                     l1835 2DDE  
                   l1931 25CA                     l1923 2584                     l1915 2552  
                   l1907 2518                     l1749 2F5C                     l1757 2D68  
                   l1597 2112                     l1589 20E4                     l1677 24AA  
                   l1765 303C                     l1861 2F6E                     l1781 2E62  
                   l1853 2E26                     l1845 2E0E                     l1837 2DEC  
                   l1829 2DC4                     l1941 2608                     l1925 259C  
                   l1917 2564                     l1933 25D6                     l1909 2520  
                   l1695 31AE                     l1759 2D6C                     l1599 211A  
                   l1687 24D4                     l1767 3044                     l1871 2FB6  
                   l1863 2F78                     l1791 29BE                     l1783 2E6C  
                   l1775 2E34                     l1855 2E2C                     l1847 2E14  
                   l1839 2DF2                     l1951 265C                     l1943 2616  
                   l1935 25E4                     l1927 25AA                     l1857 313A  
                   l1697 31B0                     l1689 2500                     l1769 304C  
                   l1873 2FC0                     l1865 2F84                     l1793 29C2  
                   l1785 299C                     l1777 2E44                     l1881 2AF0  
                   l1849 2E1A                     l1945 262E                     l1937 25F6  
                   l1953 2668                     l1929 25C2                     l1699 31B6  
                   l1867 2F8E                     l1859 2F6A                     l1795 29D0  
                   l1787 29A0                     l1779 2E52                     l1891 2B2E  
                   l1883 2AFA                     l1875 2AA8                     l1955 2676  
                   l1947 263C                     l1869 2FAA                     l1797 29E0  
                   l1789 29AE                     l1893 2B3A                     l1885 2B06  
                   l1877 2AA8                     l1957 2688                     l1949 2654  
                   ?_pad 0011                     l1799 29E4                     l1895 2B44  
                   l1887 2B20                     l1879 2AEC                     l1897 2B60  
                   l1889 2B24                     l1899 2B6C                     STR_1 2001  
                   STR_2 2030                     STR_3 202C                     STR_4 2010  
                   STR_5 201F                     STR_6 2030                     STR_7 202C  
                   u1000 20AC                     u1001 20A8                     u1010 20C8  
                   u1011 20C4                     u1100 22B0                     u1020 20F6  
                   u1101 22AC                     u1021 20F2                     u1110 22C8  
                   u1030 2104                     u1111 22C4                     u1031 2100  
                   u1120 2FDE                     u1040 222C                     u1200 2EFA  
                   u1121 2FDA                     u1041 2228                     u1201 2EF6  
                   u1130 2FF4                     u1210 2F16                     u1050 224A  
                   u1131 2FF0                     u1211 2F12                     u1051 2246  
                   u1140 300A                     u1220 2F4A                     u1060 2264  
                   u1300 2A0A                     u1141 3006                     u1221 2F46  
                   u1061 2260                     u1301 2A06                     u1150 3020  
                   u1230 2D64                     u1070 227E                     u1310 2A2C  
                   u1151 301C                     u1071 227A                     u1311 2A28  
                   u1240 2DA2                     u1080 228E                     u1160 2344  
                   u1320 2A54                     u1400 263C                     u1081 228A  
                   u1161 2340                     u1321 2A50                     u1401 2638  
                   u1250 2DB2                     u1090 22A0                     u1170 2398  
                   u1330 2A86                     u1410 2654                     u1251 2DAE  
                   u1091 229C                     u1171 2394                     u1331 2A82  
                   u1411 2650                     u1180 23C4                     u1260 2E52  
                   u1420 2676                     u1340 2552                     u1237 2D56  
                   u1181 23C0                     u1261 2E4E                     u1421 2672  
                   u1341 254E                     _LATA 003FBA                     u1190 2484  
                   u1270 2E8C                     u1430 2696                     u1350 2572  
                   _LATB 003FBB                     u1247 2D94                     u1191 2480  
                   u1271 2E88                     u1431 2692                     u1351 256E  
                   _LATC 003FBC                     u1280 29AE                     u1440 26A8  
                   u1360 25AA                     u1281 29AA                     u1441 26A4  
                   u1361 25A6                     u1290 29D0                     u1370 25C2  
                   u1291 29CC                     u1507 267E                     u1371 25BE  
                   u1380 25E4                     u1517 2DD0                     u1381 25E0  
                   u1390 2604                     u1527 2DE4                     u1391 2600  
                   u1537 2DF8                     u1457 252C                     u1547 2B12  
                   u1467 255A                     u1557 2DB8                     u1477 2590  
                   u1567 3190                     u1487 25EC                     u1577 31A2  
                   u1497 2622                     u1587 31BE                     u1597 31D0  
        lcd_write_char@a 0004          lcd_write_char@y 0003   __end_of_lcd_write_char 31AC  
                   abs@a 0013                     _dbuf 006A                     _main 2518  
                   _dtoa 2034                     _prec 0064                     _nout 0060  
                   pad@i 0018                     pad@p 0015                     fsr1h 003FE2  
                   fsr2h 003FDA                     indf1 003FE7                     indf2 003FDF  
                   fsr1l 003FE1                     pad@w 001A                     fsr2l 003FD9  
                   start FFFC          __end_of_Lcd_Cmd 31DC      __size_of_CONFIG_PIC 003A  
           ___param_bank 000000                    ??_abs 0015                    ??_pad 0017  
        __end_of___aldiv 2AA8          __end_of___aodiv 2838                    ?_main 0001  
                  ?_dtoa 001C          __end_of___aomod 299C             vfpfcnvrt@fmt 0042  
                  _PORTA 003FCA                    _PORTB 003FCB                    _PORTC 003FCC  
                  _TRISA 003FC2                    _TRISB 003FC3                    _TRISC 003FC4  
    ___lmul@multiplicand 0005                    _flags 0066                    _fputc 2B84  
                  _fputs 307C                    pad@fp 0011                    _width 0062  
                  _putch 3200                    dtoa@d 001E                    dtoa@i 003E  
                  dtoa@n 0036                    dtoa@p 0030                    dtoa@s 0034  
                  dtoa@w 0032                    tablat 003FF5          ?_lcd_write_char 0001  
    __size_of_LCD_mAdato 0064                    status 003FD8          __end_of_sprintf 307C  
       __end_of_Lcd_Port 302A          __initialization 31DC             __end_of_main 26B0  
           __end_of_dtoa 2318                   ??_main 009E                   ??_dtoa 0026  
          __activetblptr 000002                ??_LCD_new 0094                   ?_fputc 0001  
                 ?_fputs 000A                   _ANSELA 003A40                   ?_putch 0001  
                 _ANSELB 003A50                   _ANSELC 003A60             LCD_mAdato@uA 005E  
              ??_Lcd_Cmd 0002             vfprintf@cfmt 0056         __end_of_lcd_init 2E34  
       __end_of_lcd_putc 2DC4                   ___lmul 2E34                ??___aldiv 0015  
              ??___aodiv 0011                ??___aomod 0011                   clear_0 31E2  
                 pad@buf 0013                   dtoa@fp 001C                   _strlen 3100  
                 fputc@c 0001                   fputs@c 000E                   fputs@i 000F  
                 fputs@s 000A             ??_CONFIG_PIC 0001             __mediumconst 0000  
                 tblptrh 003FF7                   tblptrl 003FF6                   tblptru 003FF8  
                 putch@c 0001         __end_of_vfprintf 2F04                ??_sprintf 005E  
             __accesstop 0060  __end_of__initialization 31E8            ___rparam_used 000001  
         __pcstackCOMRAM 0001       __end_of_CONFIG_PIC 3174            __end_of_fputc 2C5C  
          __end_of_fputs 30C0            __end_of_putch 3202             ??_LCD_mAdato 0060  
              LCD_new@uA 005E           lcd_gotoxy@temp 0008       __size_of_lcd_clear 000E  
              ?_Lcd_Port 0001                  ??_fputc 0005                  ??_fputs 000E  
                ??_putch 0001               __pbssBANK0 0060       __end_of_LCD_mAdato 2FCE  
                ?___lmul 0001           ___lmul@product 0009                  ?_strlen 0001  
                _LCD_new 2AA8                  _OSCCON1 0039D9       __size_of_vfpfcnvrt 0200  
             _lcd_gotoxy 2F04         ??_lcd_write_char 0002               ??_Lcd_Port 0001  
              ?_lcd_init 0001                ?_lcd_putc 0005       lcd_write_char@temp 0002  
                _Lcd_Cmd 31AC                  __Hparam 0000                  __Lparam 0000  
      __end_of_lcd_clear 3200                  ___aldiv 299C                  ___aodiv 26B0  
                ___aomod 2838          __size_of___lmul 006A                ?_vfprintf 0050  
           __psmallconst 2000                  __pcinit 31DC                  __ramtop 2000  
                __ptext0 2518                  __ptext1 2DC4                  __ptext2 2AA8  
                __ptext3 2E34                  __ptext4 299C                  __ptext5 2F6A  
                __ptext6 302A                  __ptext7 2E9E                  __ptext8 2318  
                __ptext9 2034          __size_of_strlen 003A             __size_of_abs 0040  
                _current 0068             __size_of_pad 00C6         ___aldiv@dividend 000D  
                _sprintf 302A               ??_lcd_init 0004               ??_lcd_putc 0007  
   end_of_initialization 31E8                  fputc@fp 0003            __Lmediumconst 0000  
                fputs@fp 000C        __end_of_vfpfcnvrt 2518         ___aldiv@quotient 0017  
                postdec2 003FDD                  postinc0 003FEE                  postinc1 003FE6  
                postinc2 003FDE                Lcd_Port@a 0001               ??_vfprintf 0056  
                strlen@a 0003                  strlen@s 0001                _PORTAbits 003FCA  
            ?_lcd_gotoxy 0004            LCD_new@buffer 009A           __end_of___lmul 2E9E  
            vfpfcnvrt@ap 0044              vfpfcnvrt@fp 0040              vfpfcnvrt@ll 0048  
         __end_of_strlen 313A      start_initialization 31DC              __end_of_abs 3100  
            __end_of_pad 2D22        __size_of_Lcd_Port 005C              vfprintf@fmt 0052  
               ??___lmul 0009      __size_of_lcd_gotoxy 0066                 ??_strlen 0003  
               ?_LCD_new 005E            __pcstackBANK0 008A         ___aodiv@dividend 0001  
               ?_Lcd_Cmd 0001        __size_of_lcd_init 0070        __size_of_lcd_putc 00A2  
               ?___aldiv 000D                 ?___aodiv 0001                 ?___aomod 0001  
       ___aodiv@quotient 0013                _lcd_clear 31F2        __size_of_vfprintf 0066  
            __smallconst 2000                 ?_sprintf 0058           __size_of_fputc 00D8  
         __size_of_fputs 0044           __size_of_putch 0002          ___aldiv@divisor 0011  
        ___aldiv@counter 0015                 _LATBbits 003FBB                 Lcd_Cmd@a 0003  
             ?_lcd_clear 0001                _vfpfcnvrt 2318                lcd_putc@a 0005  
              lcd_putc@i 0009             ??_lcd_gotoxy 0005         __size_of_LCD_new 00DC  
               _Lcd_Port 2FCE        ___lmul@multiplier 0001         __size_of_Lcd_Cmd 0030  
__size_of_lcd_write_char 0038                 __Hrparam 0000               vfprintf@ap 0054  
               __Lrparam 0000               vfprintf@fp 0050       __end_of_lcd_gotoxy 2F6A  
       __size_of___aldiv 010C         __size_of___aodiv 0188         __size_of___aomod 0164  
             ?_vfpfcnvrt 0040          ___aodiv@divisor 0009          ___aodiv@counter 0011  
             sprintf@fmt 005A               _CONFIG_PIC 313A                 _dtoa$694 002E  
               __ptext10 2C5C                 __ptext11 3100                 __ptext20 2F04  
               __ptext12 307C                 __ptext21 31F2                 __ptext13 2B84  
               __ptext22 31AC                 __ptext14 3200                 __ptext23 2FCE  
               __ptext15 30C0                 __ptext24 313A                 __ptext16 2838  
               __ptext17 26B0                 __ptext18 2D22                 __ptext19 3174  
               _lcd_init 2DC4                 _lcd_putc 2D22         __size_of_sprintf 0052  
          __size_of_main 0198            __size_of_dtoa 02E4                 _vfprintf 2E9E  
            ??_lcd_clear 0004               _LCD_mAdato 2F6A         ___aomod@dividend 0001  
       LCD_mAdato@buffer 0094                sprintf@ap 008C          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0046          ___aomod@counter 0011                 sprintf@f 008E  
               sprintf@s 0058              ?_CONFIG_PIC 0001             ___aldiv@sign 0016  
           ___aodiv@sign 0012           _lcd_write_char 3174             ___aomod@sign 0012  
